<style>
<!--
BODY{FONT-FAMILY: 宋体; FONT-SIZE: 12.6px;
SCROLLBAR-HIGHLIGHT-COLOR: buttonface;
SCROLLBAR-SHADOW-COLOR: buttonface;
SCROLLBAR-3DLIGHT-COLOR: buttonhighlight;
SCROLLBAR-TRACK-COLOR: #eeeeee;
SCROLLBAR-DARKSHADOW-COLOR: buttonshadow}
td,form,select {FONT-SIZE: 12px; LINE-HEIGHT: 20px}
input {FONT-SIZE: 12px; BORDER: #000000 1px solid;height: 18px; BACKGROUND-color: #f7f7ff; COLOR: #000000;}
.small {FONT-SIZE: 1px; LINE-HEIGHT: 1px}
.mid {FONT-SIZE: 12px;LINE-HEIGHT: 20px}
A:active {COLOR: #ff0000; TEXT-DECORATION: none}
A:hover {COLOR: #ff0000; TEXT-DECORATION: underline}
A:link {COLOR: #000000; TEXT-DECORATION: none}
A:visited {COLOR: #000000; TEXT-DECORATION: none}
-->
</style>
 
<html>
<head>
<title>仲夏夜--js特效--CSS使用大全</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312">
<LINK href="css/the9.css" 
rel=stylesheet type=text/css>
<style type="text/css">
<!--
.zf {  border: #999999; border-style: solid; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px}
-->
</style>
<script src="ad.js"></script>
</head>
<body bgcolor=#FFFFFF>

<div align="center" > 
****************
    <tr> 
      **********
    </tr>
  </table>
  <table width="770" border="0" cellspacing="0" cellpadding="0" class="zf1">
    <tr>
      ***********
      ************
      *************
          <tr>
**************
 <SCRIPT LANGUAGE="JavaScript">
<!-- Begin
function addbookmark()
{
bookmarkurl="http://5icat.net.ru"
bookmarktitle="欢迎光临仲夏夜"
if (document.all)
window.external.AddFavorite(bookmarkurl,bookmarktitle)
}
//  End -->
</script>
***************</div></td>
          </tr>
          <tr>
            <td height="15"><div align="center"><img src="images/little2.gif" width="9" height="9">
 <span  onclick="var strHref=window.location.href;this.style.behavior='url(#default#homepage)';this.setHomePage('http://5icat.net.ru');"  style="CURSOR: hand"> 设为首页</a></span></div></td>
          </tr>
          <tr>
            <td><div align="center"><img src="images/little3.gif" width="9" height="9"><script src="../mail.js"></script></div></td>
          </tr>
        </table></td>
    </tr>
  </table>
   <table width="770" border="0" cellspacing="0" cellpadding="0" class="zf1">
    <tr> 
      <td  height="20"><table width="768" height="19" border="0" align="center" cellpadding="0" cellspacing="0" background="images/menubg.gif">    
          <script src="js.js"></script>
        </table></td>
    </tr>
  </table>
  <table width="770" border="0" cellspacing="0" cellpadding="0" bgcolor="#CCCCCC"class="zf1">
    <tr>
      <td class="zf3"><script language="JavaScript">
<!--
var enabled = 0; today = new Date();
var day; var date;
if(today.getDay()==0) day = "星期日"
if(today.getDay()==1) day = "星期一"
if(today.getDay()==2) day = "星期二"
if(today.getDay()==3) day = "星期三"
if(today.getDay()==4) day = "星期四"
if(today.getDay()==5) day = "星期五"
if(today.getDay()==6) day = "星期六"
date = "" + (today.getYear()) + "年" + (today.getMonth() + 1 ) + "月" + today.getDate() + "日  " + day +"";
document.write("<font color=black>" + date + "</font>");
-->
</script></td><td align=right>****************</td>
    </tr>
  </table>
<!--<IFRAME width=770 height=60 style="backgroundcolor: #CCCCCC" marginwidth="0" marginheight="0"  frameborder="0" scrolling="NO"   src="ad_top.htm"></IFRAME> -->
  <table width="770" border="0" cellspacing="0" cellpadding="0" >
    <tr>
      <td height="2"></td>
    </tr>
  </table>
  <table width="770" border="0" cellspacing="10" cellpadding="0" bgcolor="#CCCCCC">
    <tr> 
      <td bgcolor="#FFFFFF" height="501" valign="top"> 
        <div align="center"> <br>
          
          
 <table width="700" border="0" cellspacing="0" cellpadding="0">
            <tr>
              <td width="200">&nbsp;</td>
              <td> 
                <table width="300" border="1" cellspacing="0" cellpadding="0" align="center">
                  <tr> 
                    <td bgcolor="#CCCCCC" height="20" width="15">&nbsp;</td>
                    <td bgcolor="#999999" height="20" width="260"> 
					
                      <div align="center"><font color="#FFFFFF" size="3">CSS使用大全</font></div>
                    </td>
                    <td bgcolor="#CCCCCC" height="20" width="17">&nbsp;</td>
                  </tr>
                </table>
              </td>
              <td width="10"><a href="UserCollect.asp?action=add&id=1254" target="Collect">****************</a></td>
            </tr>
          </table>
          <br>
          <fieldset style="width:500;height:50"><legend>效果显示区</legend> 
         
<style>
IMG {border:2px solid black}
BODY{ 
margin:0;
background:white;
font-family:verdana;
font-size:80%;
}
.bar{
background:#336699;
width:100%;
height:30px;
border-top:1px solid #99CCFF;
border-bottom:1px solid #000000;
}
.desbar{
background:#FFFFFF;
width:100%;
padding: 10px;
border-top:1px solid #CCCCCC;
border-bottom:1px solid #000000;
color:black; 
font-size:8pt;
}
.title{
font-size:15pt;
color:white;
padding-left:10px;
}
PRE { margin:0}

a:link
{
text-decoration:none;
color:white
}
a:visited
{
text-decoration:none;
color:white
}
a:active
{
text-decoration:none;
color:white
}
a:hover
{
text-decoration:none;
color:yellow
}
SELECT { font-size:9pt; border:2px; }
</style>
<SCRIPT LANGUAGE="javascript">
var browserCapable = true;	// Prevents errors on downlevel browsers
var startImage = "photo/200204047.gif";     // /workshop/graphics/
var endImage = "photo/200204048.gif";
var featuresHeader = "<B>Features:</B><BR>"
var sSinQut ="'";
var sRandomBarsOrientationText="";

function copy2Clipboard()
{
  // Copy displayed code to user's clipboard.
  var textRange = document.body.createTextRange();
  textRange.moveToElementText(oCodeSpan);
  textRange.execCommand("Copy");
}

function highlightText(whatToHighlight) {
  var oRng = document.body.createTextRange();
  oRng.moveToElementText(oCodePre);
  oRng.execCommand("RemoveFormat");
  var oHL = document.body.createTextRange();
  oHL.moveToElementText(oCodePre);
  oHL.findText(whatToHighlight);
  oHL.execCommand("Bold");
}

function switchContent(obj) {
    oContentHolder.innerHTML=obj.innerHTML;
    oImg.src=startImage;
    if (obj==filterSection){
        changeFilter();
        updateFilterCode();
    }
    else {
	    imgObjText.innerHTML = "<BR><b>First Page</b><BR><BR>Using the <B>apply</B> method prepares this SPAN element for content changes.";
        changeTrans();
        updateTransCode();
    }
}

function getControlObject(controlName) {
    var obj=null;    

   for (x=0; x < document.all(controlName).length; x++) {
       objTemp = document.all(controlName,x);
       if (objTemp.parentElement.isSource==null) {
           obj=objTemp;
       }
    }
    return(obj);
}

function disableControlObject(controlName) {

   for (x=0; x < document.all(controlName).length; x++) {
      document.all(controlName,x).disabled=true;
    }
}

function enableControlObject(controlName) {

   for (x=0; x < document.all(controlName).length; x++) {
      document.all(controlName,x).disabled=false;
    }
}

function changeFilter() {
    var selectObject = getControlObject("oSelect");
    var selectedValue = selectObject.options[selectObject.selectedIndex].value;
    var transitionAsFilter = selectObject.options[selectObject.selectedIndex].TRANS;

    imgObjText.innerHTML = "<BR>The image, dark red text, and sky blue background make up the content of the filtered SPAN.";
    imgObj.style.backgroundColor='skyblue';
    imgObj.style.color='darkred';
    if (selectedValue != "empty") {
        if (selectedValue.indexOf('AlphaImageLoader')!=-1) {
            oControlsSpan.innerHTML = oAlphaImageLoaderControls.innerHTML;
        alphaImageLoaderFilterChange();
        }
        else if (selectedValue.indexOf('Blur')!=-1) {
            imgObj.style.backgroundColor='';        
            imgObjText.innerHTML = "<BR>The image, dark red text, and sky blue background make up the content of the filtered SPAN.";
            oControlsSpan.innerHTML = oBlurControls.innerHTML;
            blurFilterChange();
        }
        else if (selectedValue.indexOf('Alpha')!=-1) {
            oControlsSpan.innerHTML = oAlphaControls.innerHTML;
        alphaFilterChange();
        }
        else if (selectedValue.indexOf('Emboss')!=-1) {
            oControlsSpan.innerHTML = "";
            embossFilterChange();
        }
        else if (selectedValue.indexOf('Engrave')!=-1) {
            oControlsSpan.innerHTML = "";
            engraveFilterChange();
        }
        else if (selectedValue.indexOf('Pixelate')!=-1) {
            oControlsSpan.innerHTML = oPixelateFilterControls.innerHTML;
            pixelateFilterChange();
        }
        else if (selectedValue.indexOf('DropShadow')!=-1) {
            imgObj.style.backgroundColor='';        
            imgObjText.innerHTML = "<BR>The image, dark red text, and sky blue background make up the content of the filtered SPAN.";
            oControlsSpan.innerHTML = oDropShadowControls.innerHTML;
            dropShadowFilterChange();
        }
        else if (selectedValue.indexOf('Chroma')!=-1) {
            oControlsSpan.innerHTML = oChromaControls.innerHTML;
            chromaFilterChange();
        }
        else if (selectedValue.indexOf('BasicImage')!=-1) {
            oControlsSpan.innerHTML = oBasicImageControls.innerHTML;
            basicImageFilterChange();
        }
        else {
            imgObj.style.filter=selectedValue;
            oControlsSpan.innerHTML = '';
        }
        if (oControlsSpan.innerHTML!='') {
            oControlsSpan.innerHTML = featuresHeader + oControlsSpan.innerHTML;
        }
        if (transitionAsFilter == "TRUE") {
            oControlsSpan.innerHTML = oControlsSpan.innerHTML + oGlobalControls.innerHTML;
            progressChange();
        }
    }
    else {
            imgObj.style.filter='';
            oControlsSpan.innerHTML = featuresHeader + 'No filter is currently selected.';
    }
    updateFilterCode();       
}

function updateFilterCode() {
    oCodePre.innerText=imgObj.outerHTML;
}

function alphaFilterChange(){
    var cmd;
    var controlObject = getControlObject("styleList");
    var style = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("opacityList");
    var opacity = controlObject.options[controlObject.selectedIndex].value;

    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Alpha( " ;
    cmd  = cmd + "style=" + style + ",opacity=" + opacity ;

    if (style!=0){
        controlObject = getControlObject("finishOpacityList");
        enableControlObject("finishOpacityList");
        var finishOpacity = controlObject.options[controlObject.selectedIndex].value;
        
        cmd  = cmd + ",finishOpacity=" + finishOpacity ;

        if (style==1){
            controlObject = getControlObject("startXList");
            enableControlObject("startXList");
            var startX = controlObject.options[controlObject.selectedIndex].value;
            controlObject = getControlObject("finishXList");
            enableControlObject("finishXList");
            var finishX = controlObject.options[controlObject.selectedIndex].value;

            controlObject = getControlObject("startYList");
            enableControlObject("startYList");
            var startY = controlObject.options[controlObject.selectedIndex].value;
            controlObject = getControlObject("finishYList");
            enableControlObject("finishYList");
            var finishY = controlObject.options[controlObject.selectedIndex].value;

            cmd  = cmd + ",startX=" + startX + ",finishX=" + finishX ;
            cmd  = cmd + ",startY=" + startY + ",finishY=" + finishY;
        }
        else{
            disableControlObject("startXList");
            disableControlObject("finishXList");
            disableControlObject("startYList");
            disableControlObject("finishYList");
        }
        
    } 
    else{
        disableControlObject("finishOpacityList");
        disableControlObject("startXList");
        disableControlObject("finishXList");
        disableControlObject("startYList");
        disableControlObject("finishYList");
    }
   
    cmd  = cmd + ")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}
function alphaImageLoaderFilterChange(){
    var cmd; 
    var controlObject = getControlObject("srcList");
    var src = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("sizingMethodList");
    var sizingmethod = controlObject.options[controlObject.selectedIndex].value;

    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.AlphaImageLoader( " ;
    cmd  = cmd + "src="  + src + ", sizingmethod=" + sizingmethod + ")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}
function basicImageFilterChange(){
    var cmd;
    var controlObject = getControlObject("rotationList");
    var rotation = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("mirrorSwitch");
    controlObject.checked==true ? mirror = 1 : mirror = 0
    controlObject = getControlObject("invertSwitch");
    controlObject.checked==true ? invert = 1 : invert = 0
    controlObject = getControlObject("xraySwitch");
    controlObject.checked==true ? xray = 1 : xray = 0
    controlObject = getControlObject("grayscaleSwitch");
    controlObject.checked==true ? grayscale = 1 : grayscale = 0
    controlObject = getControlObject("basicImageOpacityList");
    var opacity = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.BasicImage( Rotation="+ rotation +",Mirror=" + mirror + ",Invert=" + invert + ",XRay=" + xray + ",Grayscale=" + grayscale + ",Opacity=" + opacity;
    cmd = cmd + ")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function blurFilterChange(){
    var controlObject = getControlObject("pixelRadiusList");
    var pixelRadius = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("makeShadowSwitch");
    var makeShadow = controlObject.checked;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Blur( PixelRadius="+ pixelRadius +"," + "MakeShadow=" + makeShadow;     
    if (makeShadow){

    	controlObject = getControlObject("shadowOpacityList");
    	enableControlObject("shadowOpacityList");
    	var shadowOpacity = controlObject.options[controlObject.selectedIndex].value;

        cmd  = cmd  + ",ShadowOpacity=" + shadowOpacity +")'";

    }
    else{
        disableControlObject("shadowOpacityList");
        cmd  = cmd  +")'";

    }
    eval(cmd);

    updateFilterCode();
    highlightText(cmd);
}

function embossFilterChange(){
//    var controlObject = getControlObject("biasList");
//    var bias = controlObject.options[controlObject.selectedIndex].value;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Emboss()'"; // Bias=" + bias + "
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function engraveFilterChange(){
//    var controlObject = getControlObject("biasList");
//    var bias = controlObject.options[controlObject.selectedIndex].value;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Engrave( )'"; // Bias=" + bias + "
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function pixelateFilterChange(){
    var controlObject = getControlObject("maxSquareFList");
    var maxSquare = controlObject.options[controlObject.selectedIndex].value;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Pixelate( maxsquare="+ maxSquare  +")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function dropShadowFilterChange(){
    var controlObject = getControlObject("shadowColorList");
    var shadowColor = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("offsetXList");
    var offX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("offsetYList");
    var offY = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("positiveSwitch");
    var positive = controlObject.checked;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.dropShadow( Color=" + shadowColor + ",offX=" + offX + ",offY=" + offY + ",positive=" + positive + ")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function chromaFilterChange(){
    var controlObject = getControlObject("chromaColorList");
    var chromaColor = controlObject.options[controlObject.selectedIndex].value;
    var cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Chroma( Color="+ chromaColor +")'";
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function transStart(arg) {
    var obj = getControlObject("oSelect");
    var selectedValue=obj.options[obj.selectedIndex].value;
    if (selectedValue != "empty") {
        imgObj.filters[0].apply();
        if (arg.src.indexOf(startImage)!=-1) {
            arg.src = endImage;
            imgObj.style.backgroundColor = "gold";
			imgObjText.innerHTML = "<BR><B>Second Page</B><BR><BR>Using the <B>play</B> method reveals the changes in the SPAN element content.";
        }
        else {
            arg.src = startImage;
            imgObj.style.backgroundColor = "skyblue";
			imgObjText.innerHTML = "<BR><b>First Page</b><BR><BR>Using the <B>apply</B> method prepares this SPAN element for content changes.";
        }
        imgObj.filters[0].play();
    }
}

function changeTrans() {
    var obj = getControlObject("oSelect");
    var selectedValue = obj.options[obj.selectedIndex].value;
    sRandomBarsOrientation="";

    if (selectedValue != "empty") {
        if (selectedValue.indexOf('Barn')!=-1) {
            oControlsSpan.innerHTML = oBarnControls.innerHTML;
            barnTransChange();
        }
        else if (selectedValue.indexOf('Blinds')!=-1) {
            oControlsSpan.innerHTML = oBlindsControls.innerHTML;
            blindsTransChange();
        }
        else if (selectedValue.indexOf('Checkerboard')!=-1) {
            oControlsSpan.innerHTML = oCheckerboardControls.innerHTML;
            checkerboardTransChange();
        }
        else if (selectedValue.indexOf('Fade')!=-1) {
            oControlsSpan.innerHTML = oFadeControls.innerHTML;
            fadeTransChange();
        }
        else if (selectedValue.indexOf('Iris')!=-1) {
            oControlsSpan.innerHTML = oIrisControls.innerHTML;
            irisTransChange();
        }
        else if (selectedValue.indexOf('Pixelate')!=-1) {
            oControlsSpan.innerHTML = oPixelateTransControls.innerHTML;
            pixelateTransChange();
        }
        else if (selectedValue.indexOf('RadialWipe')!=-1) {
            oControlsSpan.innerHTML = oRadialWipeControls.innerHTML;
            radialWipeTransChange();
        }
        else if (selectedValue.indexOf('RandomBars')!=-1) {
            oControlsSpan.innerHTML = oRandomBarsControls.innerHTML;
            randomBarsTransChange();
        }
        else if (selectedValue.indexOf('Slide')!=-1) {
            oControlsSpan.innerHTML = oSlideControls.innerHTML;
            slideTransChange();
        }
        else if (selectedValue.indexOf('Spiral')!=-1) {
            oControlsSpan.innerHTML = oSpiralControls.innerHTML;
            spiralTransChange();
        }
        else if (selectedValue.indexOf('Stretch')!=-1) {
            oControlsSpan.innerHTML = oStretchControls.innerHTML;
            stretchTransChange();
        }
        else if (selectedValue.indexOf('Strips')!=-1) {
            oControlsSpan.innerHTML = oStripsControls.innerHTML;
            stripsTransChange();
        }
        else if (selectedValue.indexOf('Wheel')!=-1) {
            oControlsSpan.innerHTML = oWheelControls.innerHTML;
            wheelTransChange();
        }
        else if (selectedValue.indexOf('GradientWipe')!=-1) {
            oControlsSpan.innerHTML = oWipeControls.innerHTML;
            wipeTransChange();
        }
        else if (selectedValue.indexOf('Zigzag')!=-1) {
            oControlsSpan.innerHTML = oZigzagControls.innerHTML;
            zigzagTransChange();
        }
        else {
            imgObj.style.filter=selectedValue;
            oControlsSpan.innerHTML = featuresHeader + 'The transition does not support additional features.';
        }
    }
    else {
            imgObj.style.filter=null;
            oControlsSpan.innerHTML =  featuresHeader + 'No transition is currently selected.';
    }
    updateTransCode();
}

function updateTransCode() {
    var obj = getControlObject("oSelect");
    var selectedValue=obj.options[obj.selectedIndex].value;
    var imgContents = imgObj.outerHTML;
    if (selectedValue != "empty") {
        oCodePre.innerText=completeTransCode(imgContents);
    }
    else {
        oCodePre.innerText=imgContents;
    }
    highlightText(imgContents);
}

function completeTransCode(imgText) {
    scriptBlock = '';
    scriptBlock = scriptBlock + 'var startImage ="' + startImage + '";\n';
    scriptBlock = scriptBlock + 'var endImage="' + endImage + '";\n';
    scriptBlock = scriptBlock + 'function doTrans() {\n';
    scriptBlock = scriptBlock + '        ' + sRandomBarsOrientationText + '\n';
    scriptBlock = scriptBlock + '        imgObj.filters[0].apply();\n';
    scriptBlock = scriptBlock + '        if (oImg.src.indexOf(startImage)!=-1) {\n';
    scriptBlock = scriptBlock + '            oImg.src = endImage;\n';
    scriptBlock = scriptBlock + '            imgObj.style.backgroundColor = "gold";\n';
    scriptBlock = scriptBlock + '            imgObjText.innerHTML = ';
    scriptBlock = scriptBlock + '            "<BR><B>Second Page</B><BR><BR>Using the <B>play</B> method reveals the changes in the SPAN element content."';

    scriptBlock = scriptBlock + '        }\n';
    scriptBlock = scriptBlock + '        else {\n';
    scriptBlock = scriptBlock + '            oImg.src = startImage;\n';
    scriptBlock = scriptBlock + '            imgObj.style.backgroundColor = "skyblue";\n';
    scriptBlock = scriptBlock + '            imgObjText.innerHTML = ';
    scriptBlock = scriptBlock + '            "<BR><b>First Page</b><BR><BR>Using the <B>apply</B> method prepares this SPAN element for content changes."';
    scriptBlock = scriptBlock + '        }\n';
    scriptBlock = scriptBlock + '        imgObj.filters[0].play();\n';
    scriptBlock = scriptBlock + '}\n'
    buttonBlock = '\<BR\>\<BR\>\n<BUTTON onclick="doTrans()">Play Transition</BUTTON>\n'
    fullBlock = '\<HEAD\>\n\<SCRIPT\>\n' + scriptBlock + '\<\/SCRIPT\>\n\<\/HEAD\>\n\<BODY\>\n' + imgText + buttonBlock + '\<\/BODY\>';
    return(fullBlock);  
}

function barnTransChange(){
    var controlObject = getControlObject("barnMotionList");
    var motion = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("barnVerticalList");
    var orientation = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Barn( motion="+ motion+",orientation="+ orientation+")'";
    eval(cmd);
    updateTransCode();
}

function blindsTransChange(){
    var controlObject = getControlObject("blindsBandsList");
    var bands = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("blindsDirectionList");
    var direction = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Blinds( Bands="+ bands+",direction="+ direction+")'";
    eval(cmd);
    updateTransCode();
}

function checkerboardTransChange(){
    var controlObject = getControlObject("checkerboardDirectionList");
    var direction = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("squaresXList");
    var squaresX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("squaresYList");
    var squaresY = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Checkerboard( Direction="+ direction+",SquaresX="+ squaresX+",SquaresY="+ squaresY+")'";
    eval(cmd);
    updateTransCode();
}

function fadeTransChange(){
    var controlObject = getControlObject("fadeOverlapList");
    var overlap = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Fade(Overlap=" + overlap +")'";
    eval(cmd);
    updateTransCode();
}

function irisTransChange(){
    var controlObject = getControlObject("irisStyleList");
    var irisstyle = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("irisMotionList");
    var motion = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Iris(irisstyle="+ irisstyle+",motion=" + motion +")'";
    eval(cmd);
    updateTransCode();
}

function pixelateTransChange(){
    var controlObject = getControlObject("maxSquareTransList");
    var maxSquare = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Pixelate(MaxSquare="+ maxSquare+")'";
    eval(cmd);
    imgObj.filters[0].progress=0;
    updateTransCode();
}

function randomBarsTransChange(){
    var controlObject = getControlObject("randomBarsVerticalList");
    var orientation =  controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.RandomBars()'";
    eval(cmd);
    cmd = "imgObj.filters[0].orientation='" + orientation + "';"; 
    eval(cmd);
    sRandomBarsOrientationText = cmd;
   updateTransCode();
}

function radialWipeTransChange(){
    controlObject = getControlObject("radialWipeStyleList");
    wipestyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.RadialWipe(wipestyle="+ wipestyle+")'";
    eval(cmd);
    updateTransCode();
}

function slideTransChange(){
    controlObject = getControlObject("slideStyleList");
    slidestyle = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("slideBandsList");
    bands = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Slide(slidestyle="+ slidestyle+",Bands=" + bands +")'";
    eval(cmd);
    updateTransCode();
}

function spiralTransChange(){
    controlObject = getControlObject("spiralGridSizeXList");
    gridSizeX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("spiralGridSizeYList");
    gridSizeY = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Spiral(GridSizeX="+ gridSizeX+",GridSizeY=" + gridSizeY +")'";
    eval(cmd);
    updateTransCode();
}

function stretchTransChange(){
    controlObject = getControlObject("stretchStyleList");
    stretchstyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Stretch(stretchstyle="+ stretchstyle+")'";
    eval(cmd);
    updateTransCode();
}

function stripsTransChange(){
    controlObject = getControlObject("movementList");
    motion = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Strips(motion="+ motion+")'";
    eval(cmd);
    updateTransCode();
}

function wheelTransChange(){
    controlObject = getControlObject("spokesList");
    spokes = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Wheel(spokes="+ spokes+")'";
    eval(cmd);
    updateTransCode();
}

function wipeTransChange(){
    controlObject = getControlObject("wipeReverseSwitch");
    motion = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("gradientSizeList");
    gradientSize = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("wipeStyleList");
    wipestyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.GradientWipe(GradientSize="+ gradientSize+",wipestyle=" + wipestyle +",motion=" + motion +")'";
    eval(cmd);
    updateTransCode();
}

function zigzagTransChange(){
    controlObject = getControlObject("zigzagGridSizeXList");
    gridSizeX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject("zigzagGridSizeYList");
    gridSizeY = controlObject.options[controlObject.selectedIndex].value;
    cmd = "imgObj.style.filter='progid:DXImageTransform.Microsoft.Zigzag(GridSizeX="+ gridSizeX+",GridSizeY=" + gridSizeY +")'";
    eval(cmd);
    updateTransCode();
}
</SCRIPT>

<LINK REL="stylesheet" TYPE="text/css" HREF="IASample.css" />
</HEAD>

<BODY  BGCOLOR="#FFFFFF" onload="switchContent(filterSection);">

<DIV class="desbar" style="height:0">

<!-- Rendered content -->

<SPAN ID="oLiveSpan" style="POSITION: absolute; TOP: 115px;  LEFT:330px; WIDTH: 300px; " >

<SPAN ID="imgObj" style="width:305; height:150; font:bold 9pt verdana ; line-height:1.3; padding-left:13px; padding-right:10px"><IMG ID="oImg"  align="left" style="margin:8px;"><DIV id="imgObjText"></DIV></SPAN>

</SPAN>

<!-- Control Panel -->


<SPAN ID="oControlPanel" style="LEFT: 0px; POSITION: relative; TOP: -10; WIDTH: 300; HEIGHT: 250; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 15px; z-index: 5; ">
<BR>
<P>效果类型: <INPUT TYPE=radio NAME="DemoChoice" VALUE="Filters" onclick="switchContent(filterSection); imgObj.style.color='darkred'; imgObj.style.fontWeight='bold';" CHECKED> 滤镜
<INPUT TYPE=radio NAME="DemoChoice" VALUE="Transitions" onclick="switchContent(transitionSection); imgObj.style.color='black'; imgObj.style.fontWeight='normal';"> 渐变
</P>
<SPAN ID="oContentHolder">
</SPAN>
<SPAN ID="oControlsSpan">
</SPAN>
</SPAN>



</DIV>

<!-- Copy Code Bar -->

<SPAN BGCOLOR="#DDDDDD" class="bar" style="POSITION: relative; z-index:10; HEIGHT: 35px; LEFT: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px;  TEXT-ALIGN: center; TOP: 0px; WIDTH: 100%;">
  <BUTTON STYLE="margin-top:3; margin-bottom:3;" onclick="copy2Clipboard();">
复制显示效果代码
  </BUTTON>
</SPAN>

<!-- Code -->

<SPAN id=oCodeSpan style="position:relative; FONT-FAMILY: courier new; font-size: 9pt; line-height:1.5;  LEFT: 0px; TOP: 0px; WIDTH: 100%; padding-top: 22px; padding-right: 5px; padding-bottom: 22px; padding-left: 5px; overflow: scroll; z-index: 4; height:30%;">
<SPAN ID="oCodePre" style=" HEIGHT: 100%; WIDTH: 95%">
</SPAN>
</SPAN>

<!--Filter-->
<SPAN id=filterSection style="DISPLAY: none" isSource="TRUE">
请选择一个滤镜: 
<SELECT id=oSelect onchange=changeFilter()> 
  <OPTION value=progid:DXImageTransform.Microsoft.Alpha SELECTED>Alpha</OPTION>
  <OPTION value=progid:DXImageTransform.Microsoft.AlphaImageLoader>AlphaImageLoader</OPTION>
  <OPTION value=progid:DXImageTransform.Microsoft.BasicImage >BasicImage</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Blur>Blur</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Chroma>Chroma</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.DropShadow>DropShadow</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Emboss >Emboss</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Engrave>Engrave</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Pixelate>Pixelate</OPTION>
  </SELECT><hr></SPAN>
  
<!--Transition  --> 
<SPAN id=transitionSection style="DISPLAY: none" isSource="TRUE">
请选择渐变类型:
<SELECT id=oSelect onchange=changeTrans();> 
<OPTION value=progid:DXImageTransform.Microsoft.Barn() SELECTED>Barn</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Blinds()>Blinds</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Checkerboard()>Checkerboard</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Fade()>Fade</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Inset()>Inset</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Iris()>Iris</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Pixelate()>Pixelate</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.RadialWipe()>RadialWipe</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.RandomBars()>Random Bars</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Slide()>Slide</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Spiral()>Spiral</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Stretch()>Stretch</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.CrStrips()>Strips</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Wheel()>Wheel</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.GradientWipe()>GradientWipe</OPTION> 
  <OPTION value=progid:DXImageTransform.Microsoft.Zigzag()>Zigzag</OPTION>
  </SELECT> 
  
 <BUTTON onclick=transStart(oImg) width="25">看效果</BUTTON><hr></SPAN>

<!--Alpha  -->
<SPAN id=oAlphaControls style="DISPLAY: none" isSource="TRUE"><BR/>
Style: 
<SELECT onchange=alphaFilterChange() name=styleList> 
<OPTION value=0>0 - Uniform Opacity</OPTION> 
<OPTION value=1 SELECTED>1 - Linear Opacity Change</OPTION> 
<OPTION value=2>2 - Radial Opacity Change</OPTION> 
<OPTION value=3>3 - Rectangular Opacity Change</OPTION>
</SELECT>  <BR/><BR/>
Opacity: 
<SELECT onchange=alphaFilterChange() name=opacityList> 
<OPTION value=0>0</OPTION> 
<OPTION value=25 SELECTED>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100>100</OPTION>
</SELECT>
   FinishOpacity: 
<SELECT onchange=alphaFilterChange() name=finishOpacityList> 
<OPTION value=0>0</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100 SELECTED>100</OPTION>
</SELECT> <BR/><BR/> 
StartX: 
<SELECT onchange=alphaFilterChange() name=startXList> 
<OPTION value=0 SELECTED>0</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100>100</OPTION>
</SELECT> 
   FinishX: 
<SELECT onchange=alphaFilterChange() name=finishXList> 
<OPTION value=0>0</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100 SELECTED>100</OPTION>
</SELECT> 
<BR/><BR/> 
StartY: 
<SELECT onchange=alphaFilterChange() name=startYList> 
<OPTION value=0>0</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100 SELECTED>100</OPTION>
</SELECT> 
   FinishY: 
<SELECT onchange=alphaFilterChange() name=finishYList> 
<OPTION value=0 SELECTED>0</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION> 
<OPTION value=75>75</OPTION> 
<OPTION value=100>100</OPTION>
</SELECT>  
</SPAN>

<!--AlphaImageLoader -->
<SPAN id=oAlphaImageLoaderControls style="DISPLAY: none" isSource="TRUE"><BR/>
Src (source image): 
<SELECT onchange=alphaImageLoaderFilterChange() name=srcList> 
<OPTION value='photo/notebook.GIF'  SELECTED>Spiral Bound</OPTION> 
<OPTION value='photo/MOUSE2.GIF'>Mouse</OPTION> 
</SELECT>  
<BR/><BR/>SizingMethod: 
<SELECT onchange=alphaImageLoaderFilterChange() name=sizingMethodList> 
<OPTION value='crop' SELECTED>Crop - Crop at boundaries</OPTION> 
<OPTION value='image'>Image - Normal image size</OPTION>
<OPTION value='scale'>Scale - Scale to window</OPTION> 
</SELECT><BR/><BR/><BR/><BR/>


</SPAN>
<!--Emboss -->
<SPAN id=oEmbossControls style="DISPLAY: none" isSource="TRUE">
Bias: 
<SELECT onchange=embossFilterChange() name=biasList> 
<OPTION value=-0.9>-0.9</OPTION> 
<OPTION value=-0.5>-0.5</OPTION> 
<OPTION value=-0.2>-0.2</OPTION> 
<OPTION value=0.00 SELECTED>0.00</OPTION> 
<OPTION value=0.2>0.2</OPTION> 
<OPTION value=0.5>0.5</OPTION> 
<OPTION value=0.9>0.9</OPTION> 
</SELECT><BR/><BR/><BR/><BR/>

</SPAN>

<!--Engrave -->
<SPAN id=oEngraveControls style="DISPLAY: none" isSource="TRUE">
Bias: 
<SELECT onchange=engraveFilterChange() name=biasList> 
<OPTION value=-0.9>-0.9</OPTION> 
<OPTION value=-0.5>-0.5</OPTION> 
<OPTION value=-0.2>-0.2</OPTION> 
<OPTION value=0.00 SELECTED>0.00</OPTION> 
<OPTION value=0.2>0.2</OPTION> 
<OPTION value=0.5>0.5</OPTION> 
<OPTION value=0.9>0.9</OPTION> 
</SELECT><BR/><BR/><BR/><BR/>

</SPAN>

<!--Blur  -->
<SPAN id=oBlurControls style="DISPLAY: none" isSource="TRUE"><BR/>
PixelRadius: 
<SELECT onchange=blurFilterChange() name=pixelRadiusList> 
<OPTION value=0>0</OPTION> 
<OPTION value=5 SELECTED>5</OPTION> 
<OPTION value=10>10</OPTION> 
<OPTION value=20>20</OPTION>
</SELECT> <BR/><BR/>
<INPUT onclick=blurFilterChange() type=checkbox name=makeShadowSwitch>
 MakeShadow</INPUT>
<BR><BR>ShadowOpacity: 
<SELECT onchange=blurFilterChange() name=shadowOpacityList> 
<OPTION value=0.00>0.00</OPTION> <OPTION value=0.25>0.25</OPTION>
<OPTION value=0.50>0.50</OPTION> <OPTION value=0.75>0.75</OPTION> 
<OPTION value=1.00 SELECTED>1.00</OPTION>
</SELECT> <BR/><BR/>
</SPAN>
<!-- Pixelate -->
<SPAN id=oPixelateFilterControls style="DISPLAY: none" isSource="TRUE"><BR/>
MaxSquare:
<SELECT onchange=pixelateFilterChange() name=maxSquareFList> 
<OPTION value=2>2</OPTION> 
<OPTION value=5>5</OPTION> 
<OPTION value=10 SELECTED>10</OPTION> 
<OPTION value=25>25</OPTION> 
<OPTION value=50>50</OPTION>
</SELECT> 
<BR/><BR/><BR/><BR/>
</SPAN>
<!-- DropShadow -->
<SPAN id=oDropShadowControls style="DISPLAY: none" isSource="TRUE"><BR/>
Color: 
<SELECT onchange=dropShadowFilterChange() name=shadowColorList> 
<OPTION value=DDDDDD>Light Gray (DDDDDD)</OPTION> 
<OPTION value=999999 SELECTED>Dark Gray (999999)</OPTION> 
<OPTION value=000000>Black (000000)</OPTION> 
<OPTION value=FFFF00>Yellow (FFFF00)</OPTION> 
<OPTION value=0000FF>Blue (0000FF)</OPTION>
</SELECT>
<BR><BR>
OffX: <SELECT onchange=dropShadowFilterChange() name=OffsetXList> 
<OPTION value=-5>-5</OPTION>
<OPTION value=-3>-3</OPTION>
<OPTION value=-1>-1</OPTION>
<OPTION value=1>1</OPTION>
<OPTION value=3>3</OPTION>
<OPTION value=5 SELECTED>5</OPTION>
</SELECT>
OffY: <SELECT onchange=dropShadowFilterChange() name=OffsetYList> 
<OPTION value=-5>-5</OPTION>
<OPTION value=-3>-3</OPTION>
<OPTION value=-1>-1</OPTION>
<OPTION value=1>1</OPTION>
<OPTION value=3>3</OPTION>
<OPTION value=5 SELECTED>5</OPTION>
</SELECT><BR><BR>
<INPUT onclick=dropShadowFilterChange() type=checkbox CHECKED name=positiveSwitch>Positive</INPUT> 
</SPAN>
<!--Chroma-->
<SPAN id=oChromaControls style="DISPLAY: none" isSource="TRUE"><BR/>
Color: 
<SELECT onchange=chromaFilterChange() name=chromaColorList> 
<OPTION value='#FFFFFF' SELECTED>White (FFFFFF)</OPTION>
<OPTION value='#87CEEB'>Sky blue (87CEEB)</OPTION>
<OPTION value='#8B0000'>Dark red(8B0000)</OPTION>
<OPTION value='#000000'>Black (000000)</OPTION> 
</SELECT><BR/><BR/><BR/><BR/>

</SPAN>
<!--BasicImage -->
<SPAN 
id=oBasicImageControls style="DISPLAY: none" isSource="TRUE"><BR/>
Rotation: 
<SELECT onchange=basicImageFilterChange() name=rotationList> 
<OPTION value=0 SELECTED>0 - 0 degrees</OPTION> 
<OPTION value=1>1 - 90 degrees</OPTION> 
<OPTION value=2>2 - 180 degrees</OPTION> 
<OPTION value=3>3 - 270 degrees</OPTION>
</SELECT><BR/><BR/>
Opacity: <SELECT onchange=basicImageFilterChange() name=basicImageOpacityList> 
<OPTION value=0.00>0.00</OPTION> 
<OPTION value=0.25>0.25</OPTION> 
<OPTION value=0.50>0.50</OPTION> 
<OPTION value=0.75>0.75</OPTION> 
<OPTION value=1.00 SELECTED>1.00</OPTION>
</SELECT><BR><BR/>
<INPUT onclick=basicImageFilterChange() type=checkbox name=mirrorSwitch>Mirror</INPUT> 
<INPUT onclick=basicImageFilterChange() type=checkbox name=invertSwitch>Invert</INPUT><BR><BR/>
<INPUT onclick=basicImageFilterChange() type=checkbox name=xraySwitch>X-Ray</INPUT> 
<INPUT onclick=basicImageFilterChange() type=checkbox name=grayscaleSwitch>Grayscale</INPUT>
</SPAN>
<!--Barn -->
<SPAN id=oBarnControls style="DISPLAY: none" isSource="TRUE"><BR/>
Motion: 
<SELECT onchange=barnTransChange() name=barnMotionList> 
<OPTION value=out SELECTED>Out - From inside outward</OPTION> 
<OPTION value=in>In - From outside inward</OPTION> 
</SELECT> <BR/><BR/>
Orientation: 
<SELECT onchange=barnTransChange() name=barnVerticalList> 
<OPTION value=horizontal>Horizontal</OPTION> 
<OPTION value=vertical SELECTED>Vertical</OPTION> 
</SELECT> 
</SPAN>

<!--Blinds -->
<SPAN id=oBlindsControls style="DISPLAY: none" isSource="TRUE"><BR/>
Bands: <SELECT onchange=blindsTransChange() name=blindsBandsList> 
<OPTION value=2>2</OPTION>
<OPTION value=4>4</OPTION> 
<OPTION value=6>6</OPTION> 
<OPTION value=8>8</OPTION> 
<OPTION value=10 SELECTED>10</OPTION>
</SELECT> 
Direction: 
<SELECT onchange=blindsTransChange() name=blindsDirectionList> 
<OPTION value=up SELECTED>Up</OPTION> 
<OPTION value=down>Down</OPTION> 
<OPTION value=left>Left</OPTION> 
<OPTION value=right>Right</OPTION>
</SELECT> 
</SPAN>

<!--Checkerboard  -->
<SPAN id=oCheckerboardControls style="DISPLAY: none" isSource="TRUE"><BR/>
Direction: <SELECT onchange=checkerboardTransChange() name=checkerboardDirectionList> 
<OPTION value=up>Up</OPTION> 
<OPTION value=down>Down</OPTION> 
<OPTION value=left>Left</OPTION> 
<OPTION value=right SELECTED>Right</OPTION>
</SELECT><BR><BR>
SquaresX: <SELECT onchange=checkerboardTransChange() name=squaresXList> 
<OPTION value=2 SELECTED>2</OPTION> 
<OPTION value=4>4</OPTION> 
<OPTION value=6>6</OPTION> 
<OPTION value=8>8</OPTION> 
<OPTION value=10>10</OPTION> 
<OPTION value=12>12</OPTION>
<OPTION value=50>50</OPTION> 
</SELECT> 
SquaresY: <SELECT onchange=checkerboardTransChange() name=squaresYList> 
<OPTION value=2 SELECTED>2</OPTION> 
<OPTION value=4>4</OPTION> 
<OPTION value=6>6</OPTION> 
<OPTION value=8>8</OPTION> 
<OPTION value=10>10</OPTION> 
<OPTION value=12>12</OPTION>
<OPTION value=50>50</OPTION> 
</SELECT> </SPAN>

<!--Fade -->
<SPAN id=oFadeControls style="DISPLAY: none" isSource="TRUE"><BR/>
Overlap: <SELECT onchange=fadeTransChange() name=fadeOverlapList> 
<OPTION value=0.00>0.00</OPTION> 
<OPTION value=0.25>0.25</OPTION> 
<OPTION value=0.50>0.50</OPTION> 
<OPTION value=0.75>0.75</OPTION> 
<OPTION value=1.00 SELECTED>1.00</OPTION>
</SELECT> 
</SPAN>

<!--Iris  -->
<SPAN id=oIrisControls 
style="DISPLAY: none" isSource="TRUE"><BR/>
IrisStyle: <SELECT onchange=irisTransChange() name=irisStyleList> 
<OPTION value=DIAMOND>Diamond</OPTION> 
<OPTION value=CIRCLE>Circle</OPTION> 
<OPTION value=CROSS>Cross</OPTION> 
<OPTION value=PLUS SELECTED>Plus</OPTION> 
<OPTION value=SQUARE>Square</OPTION> 
<OPTION value=STAR>Star</OPTION>
</SELECT> <BR><BR>
Motion: <SELECT onchange=irisTransChange() name=irisMotionList> 
<OPTION value=out SELECTED>Out - From inside outward</OPTION> 
<OPTION value=in>In - From outside inward</OPTION> 
</SELECT> 
</SPAN>

<!--Pixelate Trans -->

<SPAN id=oPixelateTransControls style="DISPLAY: none" isSource="TRUE"><BR/>
MaxSquare: <SELECT onchange=pixelateTransChange() name=maxSquareTransList> 
<OPTION value=2>2</OPTION>
<OPTION value=5>5</OPTION>
<OPTION value=10>10</OPTION>
<OPTION value=25>25</OPTION> 
<OPTION value=50 SELECTED>50</OPTION>
</SELECT> 
</SPAN>

<!--RadialWipe  -->
<SPAN id=oRadialWipeControls 
style="DISPLAY: none" isSource="TRUE"><BR/>
WipeStyle: <SELECT onchange=radialWipeTransChange() name=radialWipeStyleList> 
<OPTION value=CLOCK SELECTED>Clock</OPTION> 
<OPTION value=WEDGE>Wedge</OPTION> 
<OPTION value=RADIAL>Radial</OPTION>
</SELECT> 
</SPAN>

<!--RandomBars -->


<SPAN id=oRandomBarsControls style="DISPLAY: none" isSource="TRUE"><BR/>
Orientation: <SELECT onchange=randomBarsTransChange() name=randomBarsVerticalList> 
<OPTION value=horizontal SELECTED>Horizontal</OPTION> 
<OPTION value=vertical>Vertical</OPTION> 
</SELECT> 
 </SPAN>

<!--Slide -->
<SPAN id=oSlideControls style="DISPLAY: none" isSource="TRUE"><BR/>
SlideStyle: <SELECT onchange=slideTransChange() name=slideStyleList> 
<OPTION value=HIDE SELECTED>Hide</OPTION> 
<OPTION value=PUSH>Push</OPTION> 
<OPTION  value=SWAP>Swap</OPTION>
</SELECT> <BR/><BR/>
Bands: <SELECT onchange=slideTransChange() name=slideBandsList> 
<OPTION value=1 SELECTED>1</OPTION> 
<OPTION value=3>3</OPTION> 
<OPTION value=5>5</OPTION> 
<OPTION value=10>10</OPTION> 
<OPTION value=25>25</OPTION>
<OPTION value=50>50</OPTION>
</SELECT> 
</SPAN>

<!--Spiral  -->
<SPAN id=oSpiralControls style="DISPLAY: none" isSource="TRUE"><BR/>
GridSizeX: <SELECT onchange=spiralTransChange() name=spiralGridSizeXList> 
<OPTION value=8>8</OPTION> 
<OPTION value=16 SELECTED>16</OPTION> 
<OPTION value=32>32</OPTION> 
<OPTION value=64>64</OPTION>
</SELECT> 
GridSizeY: <SELECT onchange=spiralTransChange() name=spiralGridSizeYList> 
<OPTION value=8>8</OPTION> 
<OPTION value=16 SELECTED>16</OPTION> 
<OPTION value=32>32</OPTION> 
<OPTION value=64>64</OPTION>
</SELECT> 
</SPAN>

<!--Stretch  -->
<SPAN id=oStretchControls style="DISPLAY: none" isSource="TRUE"><BR/>
StretchStyle: <SELECT onchange=stretchTransChange() name=stretchStyleList> 
<OPTION value=HIDE>Hide</OPTION> 
<OPTION value=PUSH>Push</OPTION> 
<OPTION value=SPIN SELECTED>Spin</OPTION>
</SELECT> 
</SPAN>

<!--Strips -->
<SPAN id=oStripsControls style="DISPLAY: none" isSource="TRUE"><BR/>
Motion: <SELECT onchange=stripsTransChange() name=movementList> 
<OPTION value=leftup>Left-up</OPTION> 
<OPTION value=leftdown SELECTED>Left-down</OPTION> 
<OPTION value=rightup>Right-up</OPTION> 
<OPTION value=rightdown>Right-down</OPTION>
</SELECT> 
</SPAN>

<!--Wheel  -->
<SPAN id=oWheelControls style="DISPLAY: none" isSource="TRUE"><BR/>
Spokes: 
<SELECT onchange=wheelTransChange() name=spokesList> 
<OPTION value=2>2</OPTION> 
<OPTION value=4 SELECTED>4</OPTION> 
<OPTION value=6>6</OPTION> 
<OPTION value=8>8</OPTION> 
<OPTION value=10>10</OPTION>
</SELECT> 
</SPAN>

<!--Wipe -->
<SPAN id=oWipeControls style="DISPLAY: none" isSource="TRUE"><BR/>
GradientSize: <SELECT onchange=wipeTransChange() name=gradientSizeList> 
<OPTION value=0.00>0.00</OPTION> 
<OPTION value=0.25 SELECTED>0.25</OPTION> 
<OPTION value=0.50>0.50</OPTION> 
<OPTION value=0.75>0.75</OPTION> 
<OPTION value=1.00>1.00</OPTION>
</SELECT><BR><BR>
WipeStyle: <SELECT onchange=wipeTransChange() name=wipeStyleList> 
<OPTION value=0 SELECTED>0 - Left-to-right motion</OPTION> 
<OPTION value=1>1 - Top-to-bottom motion</OPTION>
</SELECT><BR><BR>
Motion: <SELECT onchange=wipeTransChange() name=wipeReverseSwitch> 
<OPTION  value=forward SELECTED>Forward</OPTION> 
<OPTION  value=reverse>Reverse</OPTION>
</SELECT>
</SPAN>

<!--ZigZag  -->
<SPAN id=oZigzagControls style="DISPLAY: none" isSource="TRUE"><BR/>
GridSizeX: 
<SELECT onchange=zigzagTransChange() name=zigzagGridSizeXList> 
<OPTION value=8>8</OPTION> 
<OPTION value=16 SELECTED>16</OPTION> 
<OPTION value=32>32</OPTION> 
<OPTION value=64>64</OPTION>
<OPTION value=100>100</OPTION> 
</SELECT> 
GridSizeY: <SELECT onchange=zigzagTransChange() name=zigzagGridSizeYList>
<OPTION value=8>8</OPTION> 
<OPTION value=16 SELECTED>16</OPTION> 
<OPTION value=32>32</OPTION> 
<OPTION value=64>64</OPTION>
<OPTION value=100>100</OPTION> 
</SELECT> 
</SPAN>

</fieldset>

<br><br><br>
          <table width="500" border="0" cellspacing="0" cellpadding="0">
            <tr>
              <td>
                <table width="500" border="0" cellspacing="0" cellpadding="0">
                  <tr> 
                    <td bgcolor="#CCCCCC" width="15" height="16">&nbsp;</td>
                    <td width="96" bgcolor="#000000" height="16"> 
                      <div align="center"><font color="#FFFFFF">脚本说明：</font></div>
                    </td>
                    <td width="389" height="16">&nbsp;</td>
                  </tr>
                </table>
              </td>
            </tr>
            <tr>
              <td class="zf">
                <textarea name="textfield" cols="80" rows="10" class="textfield">脚本说明: 
&nbsp;
把如下代码加入<body>区域中
&nbsp;&lt;style&gt;
IMG {border:2px solid black}
BODY{ 
margin:0;
background:white;
font-family:verdana;
font-size:80%;
}
.bar{
background:#336699;
width:100%;
height:30px;
border-top:1px solid #99CCFF;
border-bottom:1px solid #000000;
}
.desbar{
background:#FFFFFF;
width:100%;
padding: 10px;
border-top:1px solid #CCCCCC;
border-bottom:1px solid #000000;
color:black; 
font-size:8pt;
}
.title{
font-size:15pt;
color:white;
padding-left:10px;
}
PRE { margin:0}

a:link
{
text-decoration:none;
color:white
}
a:visited
{
text-decoration:none;
color:white
}
a:active
{
text-decoration:none;
color:white
}
a:hover
{
text-decoration:none;
color:yellow
}
SELECT { font-size:9pt; border:2px; }
&lt;/style&gt;
&lt;SCRIPT LANGUAGE=&quot;javascript&quot;&gt;
var browserCapable = true;	// Prevents errors on downlevel browsers
var startImage = &quot;photo/200204047.gif&quot;;     // /workshop/graphics/
var endImage = &quot;photo/200204048.gif&quot;;
var featuresHeader = &quot;&lt;B&gt;Features:&lt;/B&gt;&lt;BR&gt;&quot;
var sSinQut =&quot;'&quot;;
var sRandomBarsOrientationText=&quot;&quot;;

function copy2Clipboard()
{
  // Copy displayed code to user's clipboard.
  var textRange = document.body.createTextRange();
  textRange.moveToElementText(oCodeSpan);
  textRange.execCommand(&quot;Copy&quot;);
}

function highlightText(whatToHighlight) {
  var oRng = document.body.createTextRange();
  oRng.moveToElementText(oCodePre);
  oRng.execCommand(&quot;RemoveFormat&quot;);
  var oHL = document.body.createTextRange();
  oHL.moveToElementText(oCodePre);
  oHL.findText(whatToHighlight);
  oHL.execCommand(&quot;Bold&quot;);
}

function switchContent(obj) {
    oContentHolder.innerHTML=obj.innerHTML;
    oImg.src=startImage;
    if (obj==filterSection){
        changeFilter();
        updateFilterCode();
    }
    else {
	    imgObjText.innerHTML = &quot;&lt;BR&gt;&lt;b&gt;First Page&lt;/b&gt;&lt;BR&gt;&lt;BR&gt;Using the &lt;B&gt;apply&lt;/B&gt; method prepares this SPAN element for content changes.&quot;;
        changeTrans();
        updateTransCode();
    }
}

function getControlObject(controlName) {
    var obj=null;    

   for (x=0; x &lt; document.all(controlName).length; x++) {
       objTemp = document.all(controlName,x);
       if (objTemp.parentElement.isSource==null) {
           obj=objTemp;
       }
    }
    return(obj);
}

function disableControlObject(controlName) {

   for (x=0; x &lt; document.all(controlName).length; x++) {
      document.all(controlName,x).disabled=true;
    }
}

function enableControlObject(controlName) {

   for (x=0; x &lt; document.all(controlName).length; x++) {
      document.all(controlName,x).disabled=false;
    }
}

function changeFilter() {
    var selectObject = getControlObject(&quot;oSelect&quot;);
    var selectedValue = selectObject.options[selectObject.selectedIndex].value;
    var transitionAsFilter = selectObject.options[selectObject.selectedIndex].TRANS;

    imgObjText.innerHTML = &quot;&lt;BR&gt;The image, dark red text, and sky blue background make up the content of the filtered SPAN.&quot;;
    imgObj.style.backgroundColor='skyblue';
    imgObj.style.color='darkred';
    if (selectedValue != &quot;empty&quot;) {
        if (selectedValue.indexOf('AlphaImageLoader')!=-1) {
            oControlsSpan.innerHTML = oAlphaImageLoaderControls.innerHTML;
        alphaImageLoaderFilterChange();
        }
        else if (selectedValue.indexOf('Blur')!=-1) {
            imgObj.style.backgroundColor='';        
            imgObjText.innerHTML = &quot;&lt;BR&gt;The image, dark red text, and sky blue background make up the content of the filtered SPAN.&quot;;
            oControlsSpan.innerHTML = oBlurControls.innerHTML;
            blurFilterChange();
        }
        else if (selectedValue.indexOf('Alpha')!=-1) {
            oControlsSpan.innerHTML = oAlphaControls.innerHTML;
        alphaFilterChange();
        }
        else if (selectedValue.indexOf('Emboss')!=-1) {
            oControlsSpan.innerHTML = &quot;&quot;;
            embossFilterChange();
        }
        else if (selectedValue.indexOf('Engrave')!=-1) {
            oControlsSpan.innerHTML = &quot;&quot;;
            engraveFilterChange();
        }
        else if (selectedValue.indexOf('Pixelate')!=-1) {
            oControlsSpan.innerHTML = oPixelateFilterControls.innerHTML;
            pixelateFilterChange();
        }
        else if (selectedValue.indexOf('DropShadow')!=-1) {
            imgObj.style.backgroundColor='';        
            imgObjText.innerHTML = &quot;&lt;BR&gt;The image, dark red text, and sky blue background make up the content of the filtered SPAN.&quot;;
            oControlsSpan.innerHTML = oDropShadowControls.innerHTML;
            dropShadowFilterChange();
        }
        else if (selectedValue.indexOf('Chroma')!=-1) {
            oControlsSpan.innerHTML = oChromaControls.innerHTML;
            chromaFilterChange();
        }
        else if (selectedValue.indexOf('BasicImage')!=-1) {
            oControlsSpan.innerHTML = oBasicImageControls.innerHTML;
            basicImageFilterChange();
        }
        else {
            imgObj.style.filter=selectedValue;
            oControlsSpan.innerHTML = '';
        }
        if (oControlsSpan.innerHTML!='') {
            oControlsSpan.innerHTML = featuresHeader + oControlsSpan.innerHTML;
        }
        if (transitionAsFilter == &quot;TRUE&quot;) {
            oControlsSpan.innerHTML = oControlsSpan.innerHTML + oGlobalControls.innerHTML;
            progressChange();
        }
    }
    else {
            imgObj.style.filter='';
            oControlsSpan.innerHTML = featuresHeader + 'No filter is currently selected.';
    }
    updateFilterCode();       
}

function updateFilterCode() {
    oCodePre.innerText=imgObj.outerHTML;
}

function alphaFilterChange(){
    var cmd;
    var controlObject = getControlObject(&quot;styleList&quot;);
    var style = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;opacityList&quot;);
    var opacity = controlObject.options[controlObject.selectedIndex].value;

    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Alpha( &quot; ;
    cmd  = cmd + &quot;style=&quot; + style + &quot;,opacity=&quot; + opacity ;

    if (style!=0){
        controlObject = getControlObject(&quot;finishOpacityList&quot;);
        enableControlObject(&quot;finishOpacityList&quot;);
        var finishOpacity = controlObject.options[controlObject.selectedIndex].value;
        
        cmd  = cmd + &quot;,finishOpacity=&quot; + finishOpacity ;

        if (style==1){
            controlObject = getControlObject(&quot;startXList&quot;);
            enableControlObject(&quot;startXList&quot;);
            var startX = controlObject.options[controlObject.selectedIndex].value;
            controlObject = getControlObject(&quot;finishXList&quot;);
            enableControlObject(&quot;finishXList&quot;);
            var finishX = controlObject.options[controlObject.selectedIndex].value;

            controlObject = getControlObject(&quot;startYList&quot;);
            enableControlObject(&quot;startYList&quot;);
            var startY = controlObject.options[controlObject.selectedIndex].value;
            controlObject = getControlObject(&quot;finishYList&quot;);
            enableControlObject(&quot;finishYList&quot;);
            var finishY = controlObject.options[controlObject.selectedIndex].value;

            cmd  = cmd + &quot;,startX=&quot; + startX + &quot;,finishX=&quot; + finishX ;
            cmd  = cmd + &quot;,startY=&quot; + startY + &quot;,finishY=&quot; + finishY;
        }
        else{
            disableControlObject(&quot;startXList&quot;);
            disableControlObject(&quot;finishXList&quot;);
            disableControlObject(&quot;startYList&quot;);
            disableControlObject(&quot;finishYList&quot;);
        }
        
    } 
    else{
        disableControlObject(&quot;finishOpacityList&quot;);
        disableControlObject(&quot;startXList&quot;);
        disableControlObject(&quot;finishXList&quot;);
        disableControlObject(&quot;startYList&quot;);
        disableControlObject(&quot;finishYList&quot;);
    }
   
    cmd  = cmd + &quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}
function alphaImageLoaderFilterChange(){
    var cmd; 
    var controlObject = getControlObject(&quot;srcList&quot;);
    var src = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;sizingMethodList&quot;);
    var sizingmethod = controlObject.options[controlObject.selectedIndex].value;

    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.AlphaImageLoader( &quot; ;
    cmd  = cmd + &quot;src=&quot;  + src + &quot;, sizingmethod=&quot; + sizingmethod + &quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}
function basicImageFilterChange(){
    var cmd;
    var controlObject = getControlObject(&quot;rotationList&quot;);
    var rotation = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;mirrorSwitch&quot;);
    controlObject.checked==true ? mirror = 1 : mirror = 0
    controlObject = getControlObject(&quot;invertSwitch&quot;);
    controlObject.checked==true ? invert = 1 : invert = 0
    controlObject = getControlObject(&quot;xraySwitch&quot;);
    controlObject.checked==true ? xray = 1 : xray = 0
    controlObject = getControlObject(&quot;grayscaleSwitch&quot;);
    controlObject.checked==true ? grayscale = 1 : grayscale = 0
    controlObject = getControlObject(&quot;basicImageOpacityList&quot;);
    var opacity = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.BasicImage( Rotation=&quot;+ rotation +&quot;,Mirror=&quot; + mirror + &quot;,Invert=&quot; + invert + &quot;,XRay=&quot; + xray + &quot;,Grayscale=&quot; + grayscale + &quot;,Opacity=&quot; + opacity;
    cmd = cmd + &quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function blurFilterChange(){
    var controlObject = getControlObject(&quot;pixelRadiusList&quot;);
    var pixelRadius = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;makeShadowSwitch&quot;);
    var makeShadow = controlObject.checked;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Blur( PixelRadius=&quot;+ pixelRadius +&quot;,&quot; + &quot;MakeShadow=&quot; + makeShadow;     
    if (makeShadow){

    	controlObject = getControlObject(&quot;shadowOpacityList&quot;);
    	enableControlObject(&quot;shadowOpacityList&quot;);
    	var shadowOpacity = controlObject.options[controlObject.selectedIndex].value;

        cmd  = cmd  + &quot;,ShadowOpacity=&quot; + shadowOpacity +&quot;)'&quot;;

    }
    else{
        disableControlObject(&quot;shadowOpacityList&quot;);
        cmd  = cmd  +&quot;)'&quot;;

    }
    eval(cmd);

    updateFilterCode();
    highlightText(cmd);
}

function embossFilterChange(){
//    var controlObject = getControlObject(&quot;biasList&quot;);
//    var bias = controlObject.options[controlObject.selectedIndex].value;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Emboss()'&quot;; // Bias=&quot; + bias + &quot;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function engraveFilterChange(){
//    var controlObject = getControlObject(&quot;biasList&quot;);
//    var bias = controlObject.options[controlObject.selectedIndex].value;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Engrave( )'&quot;; // Bias=&quot; + bias + &quot;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function pixelateFilterChange(){
    var controlObject = getControlObject(&quot;maxSquareFList&quot;);
    var maxSquare = controlObject.options[controlObject.selectedIndex].value;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Pixelate( maxsquare=&quot;+ maxSquare  +&quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function dropShadowFilterChange(){
    var controlObject = getControlObject(&quot;shadowColorList&quot;);
    var shadowColor = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;offsetXList&quot;);
    var offX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;offsetYList&quot;);
    var offY = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;positiveSwitch&quot;);
    var positive = controlObject.checked;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.dropShadow( Color=&quot; + shadowColor + &quot;,offX=&quot; + offX + &quot;,offY=&quot; + offY + &quot;,positive=&quot; + positive + &quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function chromaFilterChange(){
    var controlObject = getControlObject(&quot;chromaColorList&quot;);
    var chromaColor = controlObject.options[controlObject.selectedIndex].value;
    var cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Chroma( Color=&quot;+ chromaColor +&quot;)'&quot;;
    eval(cmd);
    updateFilterCode();
    highlightText(cmd);
}

function transStart(arg) {
    var obj = getControlObject(&quot;oSelect&quot;);
    var selectedValue=obj.options[obj.selectedIndex].value;
    if (selectedValue != &quot;empty&quot;) {
        imgObj.filters[0].apply();
        if (arg.src.indexOf(startImage)!=-1) {
            arg.src = endImage;
            imgObj.style.backgroundColor = &quot;gold&quot;;
			imgObjText.innerHTML = &quot;&lt;BR&gt;&lt;B&gt;Second Page&lt;/B&gt;&lt;BR&gt;&lt;BR&gt;Using the &lt;B&gt;play&lt;/B&gt; method reveals the changes in the SPAN element content.&quot;;
        }
        else {
            arg.src = startImage;
            imgObj.style.backgroundColor = &quot;skyblue&quot;;
			imgObjText.innerHTML = &quot;&lt;BR&gt;&lt;b&gt;First Page&lt;/b&gt;&lt;BR&gt;&lt;BR&gt;Using the &lt;B&gt;apply&lt;/B&gt; method prepares this SPAN element for content changes.&quot;;
        }
        imgObj.filters[0].play();
    }
}

function changeTrans() {
    var obj = getControlObject(&quot;oSelect&quot;);
    var selectedValue = obj.options[obj.selectedIndex].value;
    sRandomBarsOrientation=&quot;&quot;;

    if (selectedValue != &quot;empty&quot;) {
        if (selectedValue.indexOf('Barn')!=-1) {
            oControlsSpan.innerHTML = oBarnControls.innerHTML;
            barnTransChange();
        }
        else if (selectedValue.indexOf('Blinds')!=-1) {
            oControlsSpan.innerHTML = oBlindsControls.innerHTML;
            blindsTransChange();
        }
        else if (selectedValue.indexOf('Checkerboard')!=-1) {
            oControlsSpan.innerHTML = oCheckerboardControls.innerHTML;
            checkerboardTransChange();
        }
        else if (selectedValue.indexOf('Fade')!=-1) {
            oControlsSpan.innerHTML = oFadeControls.innerHTML;
            fadeTransChange();
        }
        else if (selectedValue.indexOf('Iris')!=-1) {
            oControlsSpan.innerHTML = oIrisControls.innerHTML;
            irisTransChange();
        }
        else if (selectedValue.indexOf('Pixelate')!=-1) {
            oControlsSpan.innerHTML = oPixelateTransControls.innerHTML;
            pixelateTransChange();
        }
        else if (selectedValue.indexOf('RadialWipe')!=-1) {
            oControlsSpan.innerHTML = oRadialWipeControls.innerHTML;
            radialWipeTransChange();
        }
        else if (selectedValue.indexOf('RandomBars')!=-1) {
            oControlsSpan.innerHTML = oRandomBarsControls.innerHTML;
            randomBarsTransChange();
        }
        else if (selectedValue.indexOf('Slide')!=-1) {
            oControlsSpan.innerHTML = oSlideControls.innerHTML;
            slideTransChange();
        }
        else if (selectedValue.indexOf('Spiral')!=-1) {
            oControlsSpan.innerHTML = oSpiralControls.innerHTML;
            spiralTransChange();
        }
        else if (selectedValue.indexOf('Stretch')!=-1) {
            oControlsSpan.innerHTML = oStretchControls.innerHTML;
            stretchTransChange();
        }
        else if (selectedValue.indexOf('Strips')!=-1) {
            oControlsSpan.innerHTML = oStripsControls.innerHTML;
            stripsTransChange();
        }
        else if (selectedValue.indexOf('Wheel')!=-1) {
            oControlsSpan.innerHTML = oWheelControls.innerHTML;
            wheelTransChange();
        }
        else if (selectedValue.indexOf('GradientWipe')!=-1) {
            oControlsSpan.innerHTML = oWipeControls.innerHTML;
            wipeTransChange();
        }
        else if (selectedValue.indexOf('Zigzag')!=-1) {
            oControlsSpan.innerHTML = oZigzagControls.innerHTML;
            zigzagTransChange();
        }
        else {
            imgObj.style.filter=selectedValue;
            oControlsSpan.innerHTML = featuresHeader + 'The transition does not support additional features.';
        }
    }
    else {
            imgObj.style.filter=null;
            oControlsSpan.innerHTML =  featuresHeader + 'No transition is currently selected.';
    }
    updateTransCode();
}

function updateTransCode() {
    var obj = getControlObject(&quot;oSelect&quot;);
    var selectedValue=obj.options[obj.selectedIndex].value;
    var imgContents = imgObj.outerHTML;
    if (selectedValue != &quot;empty&quot;) {
        oCodePre.innerText=completeTransCode(imgContents);
    }
    else {
        oCodePre.innerText=imgContents;
    }
    highlightText(imgContents);
}

function completeTransCode(imgText) {
    scriptBlock = '';
    scriptBlock = scriptBlock + 'var startImage =&quot;' + startImage + '&quot;;\n';
    scriptBlock = scriptBlock + 'var endImage=&quot;' + endImage + '&quot;;\n';
    scriptBlock = scriptBlock + 'function doTrans() {\n';
    scriptBlock = scriptBlock + '        ' + sRandomBarsOrientationText + '\n';
    scriptBlock = scriptBlock + '        imgObj.filters[0].apply();\n';
    scriptBlock = scriptBlock + '        if (oImg.src.indexOf(startImage)!=-1) {\n';
    scriptBlock = scriptBlock + '            oImg.src = endImage;\n';
    scriptBlock = scriptBlock + '            imgObj.style.backgroundColor = &quot;gold&quot;;\n';
    scriptBlock = scriptBlock + '            imgObjText.innerHTML = ';
    scriptBlock = scriptBlock + '            &quot;&lt;BR&gt;&lt;B&gt;Second Page&lt;/B&gt;&lt;BR&gt;&lt;BR&gt;Using the &lt;B&gt;play&lt;/B&gt; method reveals the changes in the SPAN element content.&quot;';

    scriptBlock = scriptBlock + '        }\n';
    scriptBlock = scriptBlock + '        else {\n';
    scriptBlock = scriptBlock + '            oImg.src = startImage;\n';
    scriptBlock = scriptBlock + '            imgObj.style.backgroundColor = &quot;skyblue&quot;;\n';
    scriptBlock = scriptBlock + '            imgObjText.innerHTML = ';
    scriptBlock = scriptBlock + '            &quot;&lt;BR&gt;&lt;b&gt;First Page&lt;/b&gt;&lt;BR&gt;&lt;BR&gt;Using the &lt;B&gt;apply&lt;/B&gt; method prepares this SPAN element for content changes.&quot;';
    scriptBlock = scriptBlock + '        }\n';
    scriptBlock = scriptBlock + '        imgObj.filters[0].play();\n';
    scriptBlock = scriptBlock + '}\n'
    buttonBlock = '\&lt;BR\&gt;\&lt;BR\&gt;\n&lt;BUTTON onclick=&quot;doTrans()&quot;&gt;Play Transition&lt;/BUTTON&gt;\n'
    fullBlock = '\&lt;HEAD\&gt;\n\&lt;SCRIPT\&gt;\n' + scriptBlock + '\&lt;\/SCRIPT\&gt;\n\&lt;\/HEAD\&gt;\n\&lt;BODY\&gt;\n' + imgText + buttonBlock + '\&lt;\/BODY\&gt;';
    return(fullBlock);  
}

function barnTransChange(){
    var controlObject = getControlObject(&quot;barnMotionList&quot;);
    var motion = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;barnVerticalList&quot;);
    var orientation = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Barn( motion=&quot;+ motion+&quot;,orientation=&quot;+ orientation+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function blindsTransChange(){
    var controlObject = getControlObject(&quot;blindsBandsList&quot;);
    var bands = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;blindsDirectionList&quot;);
    var direction = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Blinds( Bands=&quot;+ bands+&quot;,direction=&quot;+ direction+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function checkerboardTransChange(){
    var controlObject = getControlObject(&quot;checkerboardDirectionList&quot;);
    var direction = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;squaresXList&quot;);
    var squaresX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;squaresYList&quot;);
    var squaresY = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Checkerboard( Direction=&quot;+ direction+&quot;,SquaresX=&quot;+ squaresX+&quot;,SquaresY=&quot;+ squaresY+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function fadeTransChange(){
    var controlObject = getControlObject(&quot;fadeOverlapList&quot;);
    var overlap = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Fade(Overlap=&quot; + overlap +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function irisTransChange(){
    var controlObject = getControlObject(&quot;irisStyleList&quot;);
    var irisstyle = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;irisMotionList&quot;);
    var motion = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Iris(irisstyle=&quot;+ irisstyle+&quot;,motion=&quot; + motion +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function pixelateTransChange(){
    var controlObject = getControlObject(&quot;maxSquareTransList&quot;);
    var maxSquare = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Pixelate(MaxSquare=&quot;+ maxSquare+&quot;)'&quot;;
    eval(cmd);
    imgObj.filters[0].progress=0;
    updateTransCode();
}

function randomBarsTransChange(){
    var controlObject = getControlObject(&quot;randomBarsVerticalList&quot;);
    var orientation =  controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.RandomBars()'&quot;;
    eval(cmd);
    cmd = &quot;imgObj.filters[0].orientation='&quot; + orientation + &quot;';&quot;; 
    eval(cmd);
    sRandomBarsOrientationText = cmd;
   updateTransCode();
}

function radialWipeTransChange(){
    controlObject = getControlObject(&quot;radialWipeStyleList&quot;);
    wipestyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.RadialWipe(wipestyle=&quot;+ wipestyle+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function slideTransChange(){
    controlObject = getControlObject(&quot;slideStyleList&quot;);
    slidestyle = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;slideBandsList&quot;);
    bands = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Slide(slidestyle=&quot;+ slidestyle+&quot;,Bands=&quot; + bands +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function spiralTransChange(){
    controlObject = getControlObject(&quot;spiralGridSizeXList&quot;);
    gridSizeX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;spiralGridSizeYList&quot;);
    gridSizeY = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Spiral(GridSizeX=&quot;+ gridSizeX+&quot;,GridSizeY=&quot; + gridSizeY +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function stretchTransChange(){
    controlObject = getControlObject(&quot;stretchStyleList&quot;);
    stretchstyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Stretch(stretchstyle=&quot;+ stretchstyle+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function stripsTransChange(){
    controlObject = getControlObject(&quot;movementList&quot;);
    motion = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Strips(motion=&quot;+ motion+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function wheelTransChange(){
    controlObject = getControlObject(&quot;spokesList&quot;);
    spokes = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Wheel(spokes=&quot;+ spokes+&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function wipeTransChange(){
    controlObject = getControlObject(&quot;wipeReverseSwitch&quot;);
    motion = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;gradientSizeList&quot;);
    gradientSize = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;wipeStyleList&quot;);
    wipestyle = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.GradientWipe(GradientSize=&quot;+ gradientSize+&quot;,wipestyle=&quot; + wipestyle +&quot;,motion=&quot; + motion +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}

function zigzagTransChange(){
    controlObject = getControlObject(&quot;zigzagGridSizeXList&quot;);
    gridSizeX = controlObject.options[controlObject.selectedIndex].value;
    controlObject = getControlObject(&quot;zigzagGridSizeYList&quot;);
    gridSizeY = controlObject.options[controlObject.selectedIndex].value;
    cmd = &quot;imgObj.style.filter='progid:DXImageTransform.Microsoft.Zigzag(GridSizeX=&quot;+ gridSizeX+&quot;,GridSizeY=&quot; + gridSizeY +&quot;)'&quot;;
    eval(cmd);
    updateTransCode();
}
&lt;/SCRIPT&gt;

&lt;LINK REL=&quot;stylesheet&quot; TYPE=&quot;text/css&quot; HREF=&quot;IASample.css&quot; /&gt;
&lt;/HEAD&gt;

&lt;BODY  BGCOLOR=&quot;#FFFFFF&quot; onload=&quot;switchContent(filterSection);&quot;&gt;

&lt;DIV class=&quot;desbar&quot; style=&quot;height:0&quot;&gt;

&lt;!-- Rendered content --&gt;

&lt;SPAN ID=&quot;oLiveSpan&quot; style=&quot;POSITION: absolute; TOP: 115px;  LEFT:330px; WIDTH: 300px; &quot; &gt;

&lt;SPAN ID=&quot;imgObj&quot; style=&quot;width:305; height:150; font:bold 9pt verdana ; line-height:1.3; padding-left:13px; padding-right:10px&quot;&gt;&lt;IMG ID=&quot;oImg&quot;  align=&quot;left&quot; style=&quot;margin:8px;&quot;&gt;&lt;DIV id=&quot;imgObjText&quot;&gt;&lt;/DIV&gt;&lt;/SPAN&gt;

&lt;/SPAN&gt;

&lt;!-- Control Panel --&gt;


&lt;SPAN ID=&quot;oControlPanel&quot; style=&quot;LEFT: 0px; POSITION: relative; TOP: -10; WIDTH: 300; HEIGHT: 250; padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 15px; z-index: 5; &quot;&gt;
&lt;BR&gt;
&lt;P&gt;效果类型: &lt;INPUT TYPE=radio NAME=&quot;DemoChoice&quot; VALUE=&quot;Filters&quot; onclick=&quot;switchContent(filterSection); imgObj.style.color='darkred'; imgObj.style.fontWeight='bold';&quot; CHECKED&gt; 滤镜
&lt;INPUT TYPE=radio NAME=&quot;DemoChoice&quot; VALUE=&quot;Transitions&quot; onclick=&quot;switchContent(transitionSection); imgObj.style.color='black'; imgObj.style.fontWeight='normal';&quot;&gt; 渐变
&lt;/P&gt;
&lt;SPAN ID=&quot;oContentHolder&quot;&gt;
&lt;/SPAN&gt;
&lt;SPAN ID=&quot;oControlsSpan&quot;&gt;
&lt;/SPAN&gt;
&lt;/SPAN&gt;



&lt;/DIV&gt;

&lt;!-- Copy Code Bar --&gt;

&lt;SPAN BGCOLOR=&quot;#DDDDDD&quot; class=&quot;bar&quot; style=&quot;POSITION: relative; z-index:10; HEIGHT: 35px; LEFT: 0px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px;  TEXT-ALIGN: center; TOP: 0px; WIDTH: 100%;&quot;&gt;
  &lt;BUTTON STYLE=&quot;margin-top:3; margin-bottom:3;&quot; onclick=&quot;copy2Clipboard();&quot;&gt;
复制显示效果代码
  &lt;/BUTTON&gt;
&lt;/SPAN&gt;

&lt;!-- Code --&gt;

&lt;SPAN id=oCodeSpan style=&quot;position:relative; FONT-FAMILY: courier new; font-size: 9pt; line-height:1.5;  LEFT: 0px; TOP: 0px; WIDTH: 100%; padding-top: 22px; padding-right: 5px; padding-bottom: 22px; padding-left: 5px; overflow: scroll; z-index: 4; height:30%;&quot;&gt;
&lt;SPAN ID=&quot;oCodePre&quot; style=&quot; HEIGHT: 100%; WIDTH: 95%&quot;&gt;
&lt;/SPAN&gt;
&lt;/SPAN&gt;

&lt;!--Filter--&gt;
&lt;SPAN id=filterSection style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;
请选择一个滤镜: 
&lt;SELECT id=oSelect onchange=changeFilter()&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Alpha SELECTED&gt;Alpha&lt;/OPTION&gt;
  &lt;OPTION value=progid:DXImageTransform.Microsoft.AlphaImageLoader&gt;AlphaImageLoader&lt;/OPTION&gt;
  &lt;OPTION value=progid:DXImageTransform.Microsoft.BasicImage &gt;BasicImage&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Blur&gt;Blur&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Chroma&gt;Chroma&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.DropShadow&gt;DropShadow&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Emboss &gt;Emboss&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Engrave&gt;Engrave&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Pixelate&gt;Pixelate&lt;/OPTION&gt;
  &lt;/SELECT&gt;&lt;hr&gt;&lt;/SPAN&gt;
  
&lt;!--Transition  --&gt; 
&lt;SPAN id=transitionSection style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;
请选择渐变类型:
&lt;SELECT id=oSelect onchange=changeTrans();&gt; 
&lt;OPTION value=progid:DXImageTransform.Microsoft.Barn() SELECTED&gt;Barn&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Blinds()&gt;Blinds&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Checkerboard()&gt;Checkerboard&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Fade()&gt;Fade&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Inset()&gt;Inset&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Iris()&gt;Iris&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Pixelate()&gt;Pixelate&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.RadialWipe()&gt;RadialWipe&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.RandomBars()&gt;Random Bars&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Slide()&gt;Slide&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Spiral()&gt;Spiral&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Stretch()&gt;Stretch&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.CrStrips()&gt;Strips&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Wheel()&gt;Wheel&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.GradientWipe()&gt;GradientWipe&lt;/OPTION&gt; 
  &lt;OPTION value=progid:DXImageTransform.Microsoft.Zigzag()&gt;Zigzag&lt;/OPTION&gt;
  &lt;/SELECT&gt; 
  
 &lt;BUTTON onclick=transStart(oImg) width=&quot;25&quot;&gt;看效果&lt;/BUTTON&gt;&lt;hr&gt;&lt;/SPAN&gt;

&lt;!--Alpha  --&gt;
&lt;SPAN id=oAlphaControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Style: 
&lt;SELECT onchange=alphaFilterChange() name=styleList&gt; 
&lt;OPTION value=0&gt;0 - Uniform Opacity&lt;/OPTION&gt; 
&lt;OPTION value=1 SELECTED&gt;1 - Linear Opacity Change&lt;/OPTION&gt; 
&lt;OPTION value=2&gt;2 - Radial Opacity Change&lt;/OPTION&gt; 
&lt;OPTION value=3&gt;3 - Rectangular Opacity Change&lt;/OPTION&gt;
&lt;/SELECT&gt;  &lt;BR/&gt;&lt;BR/&gt;
Opacity: 
&lt;SELECT onchange=alphaFilterChange() name=opacityList&gt; 
&lt;OPTION value=0&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25 SELECTED&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt;
   FinishOpacity: 
&lt;SELECT onchange=alphaFilterChange() name=finishOpacityList&gt; 
&lt;OPTION value=0&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100 SELECTED&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt; &lt;BR/&gt;&lt;BR/&gt; 
StartX: 
&lt;SELECT onchange=alphaFilterChange() name=startXList&gt; 
&lt;OPTION value=0 SELECTED&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt; 
   FinishX: 
&lt;SELECT onchange=alphaFilterChange() name=finishXList&gt; 
&lt;OPTION value=0&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100 SELECTED&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;BR/&gt;&lt;BR/&gt; 
StartY: 
&lt;SELECT onchange=alphaFilterChange() name=startYList&gt; 
&lt;OPTION value=0&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100 SELECTED&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt; 
   FinishY: 
&lt;SELECT onchange=alphaFilterChange() name=finishYList&gt; 
&lt;OPTION value=0 SELECTED&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;OPTION value=75&gt;75&lt;/OPTION&gt; 
&lt;OPTION value=100&gt;100&lt;/OPTION&gt;
&lt;/SELECT&gt;  
&lt;/SPAN&gt;

&lt;!--AlphaImageLoader --&gt;
&lt;SPAN id=oAlphaImageLoaderControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Src (source image): 
&lt;SELECT onchange=alphaImageLoaderFilterChange() name=srcList&gt; 
&lt;OPTION value='photo/notebook.GIF'  SELECTED&gt;Spiral Bound&lt;/OPTION&gt; 
&lt;OPTION value='photo/MOUSE2.GIF'&gt;Mouse&lt;/OPTION&gt; 
&lt;/SELECT&gt;  
&lt;BR/&gt;&lt;BR/&gt;SizingMethod: 
&lt;SELECT onchange=alphaImageLoaderFilterChange() name=sizingMethodList&gt; 
&lt;OPTION value='crop' SELECTED&gt;Crop - Crop at boundaries&lt;/OPTION&gt; 
&lt;OPTION value='image'&gt;Image - Normal image size&lt;/OPTION&gt;
&lt;OPTION value='scale'&gt;Scale - Scale to window&lt;/OPTION&gt; 
&lt;/SELECT&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;


&lt;/SPAN&gt;
&lt;!--Emboss --&gt;
&lt;SPAN id=oEmbossControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;
Bias: 
&lt;SELECT onchange=embossFilterChange() name=biasList&gt; 
&lt;OPTION value=-0.9&gt;-0.9&lt;/OPTION&gt; 
&lt;OPTION value=-0.5&gt;-0.5&lt;/OPTION&gt; 
&lt;OPTION value=-0.2&gt;-0.2&lt;/OPTION&gt; 
&lt;OPTION value=0.00 SELECTED&gt;0.00&lt;/OPTION&gt; 
&lt;OPTION value=0.2&gt;0.2&lt;/OPTION&gt; 
&lt;OPTION value=0.5&gt;0.5&lt;/OPTION&gt; 
&lt;OPTION value=0.9&gt;0.9&lt;/OPTION&gt; 
&lt;/SELECT&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;

&lt;/SPAN&gt;

&lt;!--Engrave --&gt;
&lt;SPAN id=oEngraveControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;
Bias: 
&lt;SELECT onchange=engraveFilterChange() name=biasList&gt; 
&lt;OPTION value=-0.9&gt;-0.9&lt;/OPTION&gt; 
&lt;OPTION value=-0.5&gt;-0.5&lt;/OPTION&gt; 
&lt;OPTION value=-0.2&gt;-0.2&lt;/OPTION&gt; 
&lt;OPTION value=0.00 SELECTED&gt;0.00&lt;/OPTION&gt; 
&lt;OPTION value=0.2&gt;0.2&lt;/OPTION&gt; 
&lt;OPTION value=0.5&gt;0.5&lt;/OPTION&gt; 
&lt;OPTION value=0.9&gt;0.9&lt;/OPTION&gt; 
&lt;/SELECT&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;

&lt;/SPAN&gt;

&lt;!--Blur  --&gt;
&lt;SPAN id=oBlurControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
PixelRadius: 
&lt;SELECT onchange=blurFilterChange() name=pixelRadiusList&gt; 
&lt;OPTION value=0&gt;0&lt;/OPTION&gt; 
&lt;OPTION value=5 SELECTED&gt;5&lt;/OPTION&gt; 
&lt;OPTION value=10&gt;10&lt;/OPTION&gt; 
&lt;OPTION value=20&gt;20&lt;/OPTION&gt;
&lt;/SELECT&gt; &lt;BR/&gt;&lt;BR/&gt;
&lt;INPUT onclick=blurFilterChange() type=checkbox name=makeShadowSwitch&gt;
 MakeShadow&lt;/INPUT&gt;
&lt;BR&gt;&lt;BR&gt;ShadowOpacity: 
&lt;SELECT onchange=blurFilterChange() name=shadowOpacityList&gt; 
&lt;OPTION value=0.00&gt;0.00&lt;/OPTION&gt; &lt;OPTION value=0.25&gt;0.25&lt;/OPTION&gt;
&lt;OPTION value=0.50&gt;0.50&lt;/OPTION&gt; &lt;OPTION value=0.75&gt;0.75&lt;/OPTION&gt; 
&lt;OPTION value=1.00 SELECTED&gt;1.00&lt;/OPTION&gt;
&lt;/SELECT&gt; &lt;BR/&gt;&lt;BR/&gt;
&lt;/SPAN&gt;
&lt;!-- Pixelate --&gt;
&lt;SPAN id=oPixelateFilterControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
MaxSquare:
&lt;SELECT onchange=pixelateFilterChange() name=maxSquareFList&gt; 
&lt;OPTION value=2&gt;2&lt;/OPTION&gt; 
&lt;OPTION value=5&gt;5&lt;/OPTION&gt; 
&lt;OPTION value=10 SELECTED&gt;10&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt; 
&lt;OPTION value=50&gt;50&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;
&lt;/SPAN&gt;
&lt;!-- DropShadow --&gt;
&lt;SPAN id=oDropShadowControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Color: 
&lt;SELECT onchange=dropShadowFilterChange() name=shadowColorList&gt; 
&lt;OPTION value=DDDDDD&gt;Light Gray (DDDDDD)&lt;/OPTION&gt; 
&lt;OPTION value=999999 SELECTED&gt;Dark Gray (999999)&lt;/OPTION&gt; 
&lt;OPTION value=000000&gt;Black (000000)&lt;/OPTION&gt; 
&lt;OPTION value=FFFF00&gt;Yellow (FFFF00)&lt;/OPTION&gt; 
&lt;OPTION value=0000FF&gt;Blue (0000FF)&lt;/OPTION&gt;
&lt;/SELECT&gt;
&lt;BR&gt;&lt;BR&gt;
OffX: &lt;SELECT onchange=dropShadowFilterChange() name=OffsetXList&gt; 
&lt;OPTION value=-5&gt;-5&lt;/OPTION&gt;
&lt;OPTION value=-3&gt;-3&lt;/OPTION&gt;
&lt;OPTION value=-1&gt;-1&lt;/OPTION&gt;
&lt;OPTION value=1&gt;1&lt;/OPTION&gt;
&lt;OPTION value=3&gt;3&lt;/OPTION&gt;
&lt;OPTION value=5 SELECTED&gt;5&lt;/OPTION&gt;
&lt;/SELECT&gt;
OffY: &lt;SELECT onchange=dropShadowFilterChange() name=OffsetYList&gt; 
&lt;OPTION value=-5&gt;-5&lt;/OPTION&gt;
&lt;OPTION value=-3&gt;-3&lt;/OPTION&gt;
&lt;OPTION value=-1&gt;-1&lt;/OPTION&gt;
&lt;OPTION value=1&gt;1&lt;/OPTION&gt;
&lt;OPTION value=3&gt;3&lt;/OPTION&gt;
&lt;OPTION value=5 SELECTED&gt;5&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR&gt;&lt;BR&gt;
&lt;INPUT onclick=dropShadowFilterChange() type=checkbox CHECKED name=positiveSwitch&gt;Positive&lt;/INPUT&gt; 
&lt;/SPAN&gt;
&lt;!--Chroma--&gt;
&lt;SPAN id=oChromaControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Color: 
&lt;SELECT onchange=chromaFilterChange() name=chromaColorList&gt; 
&lt;OPTION value='#FFFFFF' SELECTED&gt;White (FFFFFF)&lt;/OPTION&gt;
&lt;OPTION value='#87CEEB'&gt;Sky blue (87CEEB)&lt;/OPTION&gt;
&lt;OPTION value='#8B0000'&gt;Dark red(8B0000)&lt;/OPTION&gt;
&lt;OPTION value='#000000'&gt;Black (000000)&lt;/OPTION&gt; 
&lt;/SELECT&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;

&lt;/SPAN&gt;
&lt;!--BasicImage --&gt;
&lt;SPAN 
id=oBasicImageControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Rotation: 
&lt;SELECT onchange=basicImageFilterChange() name=rotationList&gt; 
&lt;OPTION value=0 SELECTED&gt;0 - 0 degrees&lt;/OPTION&gt; 
&lt;OPTION value=1&gt;1 - 90 degrees&lt;/OPTION&gt; 
&lt;OPTION value=2&gt;2 - 180 degrees&lt;/OPTION&gt; 
&lt;OPTION value=3&gt;3 - 270 degrees&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR/&gt;&lt;BR/&gt;
Opacity: &lt;SELECT onchange=basicImageFilterChange() name=basicImageOpacityList&gt; 
&lt;OPTION value=0.00&gt;0.00&lt;/OPTION&gt; 
&lt;OPTION value=0.25&gt;0.25&lt;/OPTION&gt; 
&lt;OPTION value=0.50&gt;0.50&lt;/OPTION&gt; 
&lt;OPTION value=0.75&gt;0.75&lt;/OPTION&gt; 
&lt;OPTION value=1.00 SELECTED&gt;1.00&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR&gt;&lt;BR/&gt;
&lt;INPUT onclick=basicImageFilterChange() type=checkbox name=mirrorSwitch&gt;Mirror&lt;/INPUT&gt; 
&lt;INPUT onclick=basicImageFilterChange() type=checkbox name=invertSwitch&gt;Invert&lt;/INPUT&gt;&lt;BR&gt;&lt;BR/&gt;
&lt;INPUT onclick=basicImageFilterChange() type=checkbox name=xraySwitch&gt;X-Ray&lt;/INPUT&gt; 
&lt;INPUT onclick=basicImageFilterChange() type=checkbox name=grayscaleSwitch&gt;Grayscale&lt;/INPUT&gt;
&lt;/SPAN&gt;
&lt;!--Barn --&gt;
&lt;SPAN id=oBarnControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Motion: 
&lt;SELECT onchange=barnTransChange() name=barnMotionList&gt; 
&lt;OPTION value=out SELECTED&gt;Out - From inside outward&lt;/OPTION&gt; 
&lt;OPTION value=in&gt;In - From outside inward&lt;/OPTION&gt; 
&lt;/SELECT&gt; &lt;BR/&gt;&lt;BR/&gt;
Orientation: 
&lt;SELECT onchange=barnTransChange() name=barnVerticalList&gt; 
&lt;OPTION value=horizontal&gt;Horizontal&lt;/OPTION&gt; 
&lt;OPTION value=vertical SELECTED&gt;Vertical&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Blinds --&gt;
&lt;SPAN id=oBlindsControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Bands: &lt;SELECT onchange=blindsTransChange() name=blindsBandsList&gt; 
&lt;OPTION value=2&gt;2&lt;/OPTION&gt;
&lt;OPTION value=4&gt;4&lt;/OPTION&gt; 
&lt;OPTION value=6&gt;6&lt;/OPTION&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=10 SELECTED&gt;10&lt;/OPTION&gt;
&lt;/SELECT&gt; 
Direction: 
&lt;SELECT onchange=blindsTransChange() name=blindsDirectionList&gt; 
&lt;OPTION value=up SELECTED&gt;Up&lt;/OPTION&gt; 
&lt;OPTION value=down&gt;Down&lt;/OPTION&gt; 
&lt;OPTION value=left&gt;Left&lt;/OPTION&gt; 
&lt;OPTION value=right&gt;Right&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Checkerboard  --&gt;
&lt;SPAN id=oCheckerboardControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Direction: &lt;SELECT onchange=checkerboardTransChange() name=checkerboardDirectionList&gt; 
&lt;OPTION value=up&gt;Up&lt;/OPTION&gt; 
&lt;OPTION value=down&gt;Down&lt;/OPTION&gt; 
&lt;OPTION value=left&gt;Left&lt;/OPTION&gt; 
&lt;OPTION value=right SELECTED&gt;Right&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR&gt;&lt;BR&gt;
SquaresX: &lt;SELECT onchange=checkerboardTransChange() name=squaresXList&gt; 
&lt;OPTION value=2 SELECTED&gt;2&lt;/OPTION&gt; 
&lt;OPTION value=4&gt;4&lt;/OPTION&gt; 
&lt;OPTION value=6&gt;6&lt;/OPTION&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=10&gt;10&lt;/OPTION&gt; 
&lt;OPTION value=12&gt;12&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
SquaresY: &lt;SELECT onchange=checkerboardTransChange() name=squaresYList&gt; 
&lt;OPTION value=2 SELECTED&gt;2&lt;/OPTION&gt; 
&lt;OPTION value=4&gt;4&lt;/OPTION&gt; 
&lt;OPTION value=6&gt;6&lt;/OPTION&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=10&gt;10&lt;/OPTION&gt; 
&lt;OPTION value=12&gt;12&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt; 
&lt;/SELECT&gt; &lt;/SPAN&gt;

&lt;!--Fade --&gt;
&lt;SPAN id=oFadeControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Overlap: &lt;SELECT onchange=fadeTransChange() name=fadeOverlapList&gt; 
&lt;OPTION value=0.00&gt;0.00&lt;/OPTION&gt; 
&lt;OPTION value=0.25&gt;0.25&lt;/OPTION&gt; 
&lt;OPTION value=0.50&gt;0.50&lt;/OPTION&gt; 
&lt;OPTION value=0.75&gt;0.75&lt;/OPTION&gt; 
&lt;OPTION value=1.00 SELECTED&gt;1.00&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Iris  --&gt;
&lt;SPAN id=oIrisControls 
style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
IrisStyle: &lt;SELECT onchange=irisTransChange() name=irisStyleList&gt; 
&lt;OPTION value=DIAMOND&gt;Diamond&lt;/OPTION&gt; 
&lt;OPTION value=CIRCLE&gt;Circle&lt;/OPTION&gt; 
&lt;OPTION value=CROSS&gt;Cross&lt;/OPTION&gt; 
&lt;OPTION value=PLUS SELECTED&gt;Plus&lt;/OPTION&gt; 
&lt;OPTION value=SQUARE&gt;Square&lt;/OPTION&gt; 
&lt;OPTION value=STAR&gt;Star&lt;/OPTION&gt;
&lt;/SELECT&gt; &lt;BR&gt;&lt;BR&gt;
Motion: &lt;SELECT onchange=irisTransChange() name=irisMotionList&gt; 
&lt;OPTION value=out SELECTED&gt;Out - From inside outward&lt;/OPTION&gt; 
&lt;OPTION value=in&gt;In - From outside inward&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Pixelate Trans --&gt;

&lt;SPAN id=oPixelateTransControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
MaxSquare: &lt;SELECT onchange=pixelateTransChange() name=maxSquareTransList&gt; 
&lt;OPTION value=2&gt;2&lt;/OPTION&gt;
&lt;OPTION value=5&gt;5&lt;/OPTION&gt;
&lt;OPTION value=10&gt;10&lt;/OPTION&gt;
&lt;OPTION value=25&gt;25&lt;/OPTION&gt; 
&lt;OPTION value=50 SELECTED&gt;50&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--RadialWipe  --&gt;
&lt;SPAN id=oRadialWipeControls 
style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
WipeStyle: &lt;SELECT onchange=radialWipeTransChange() name=radialWipeStyleList&gt; 
&lt;OPTION value=CLOCK SELECTED&gt;Clock&lt;/OPTION&gt; 
&lt;OPTION value=WEDGE&gt;Wedge&lt;/OPTION&gt; 
&lt;OPTION value=RADIAL&gt;Radial&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--RandomBars --&gt;


&lt;SPAN id=oRandomBarsControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Orientation: &lt;SELECT onchange=randomBarsTransChange() name=randomBarsVerticalList&gt; 
&lt;OPTION value=horizontal SELECTED&gt;Horizontal&lt;/OPTION&gt; 
&lt;OPTION value=vertical&gt;Vertical&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
 &lt;/SPAN&gt;

&lt;!--Slide --&gt;
&lt;SPAN id=oSlideControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
SlideStyle: &lt;SELECT onchange=slideTransChange() name=slideStyleList&gt; 
&lt;OPTION value=HIDE SELECTED&gt;Hide&lt;/OPTION&gt; 
&lt;OPTION value=PUSH&gt;Push&lt;/OPTION&gt; 
&lt;OPTION  value=SWAP&gt;Swap&lt;/OPTION&gt;
&lt;/SELECT&gt; &lt;BR/&gt;&lt;BR/&gt;
Bands: &lt;SELECT onchange=slideTransChange() name=slideBandsList&gt; 
&lt;OPTION value=1 SELECTED&gt;1&lt;/OPTION&gt; 
&lt;OPTION value=3&gt;3&lt;/OPTION&gt; 
&lt;OPTION value=5&gt;5&lt;/OPTION&gt; 
&lt;OPTION value=10&gt;10&lt;/OPTION&gt; 
&lt;OPTION value=25&gt;25&lt;/OPTION&gt;
&lt;OPTION value=50&gt;50&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Spiral  --&gt;
&lt;SPAN id=oSpiralControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
GridSizeX: &lt;SELECT onchange=spiralTransChange() name=spiralGridSizeXList&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=16 SELECTED&gt;16&lt;/OPTION&gt; 
&lt;OPTION value=32&gt;32&lt;/OPTION&gt; 
&lt;OPTION value=64&gt;64&lt;/OPTION&gt;
&lt;/SELECT&gt; 
GridSizeY: &lt;SELECT onchange=spiralTransChange() name=spiralGridSizeYList&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=16 SELECTED&gt;16&lt;/OPTION&gt; 
&lt;OPTION value=32&gt;32&lt;/OPTION&gt; 
&lt;OPTION value=64&gt;64&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Stretch  --&gt;
&lt;SPAN id=oStretchControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
StretchStyle: &lt;SELECT onchange=stretchTransChange() name=stretchStyleList&gt; 
&lt;OPTION value=HIDE&gt;Hide&lt;/OPTION&gt; 
&lt;OPTION value=PUSH&gt;Push&lt;/OPTION&gt; 
&lt;OPTION value=SPIN SELECTED&gt;Spin&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Strips --&gt;
&lt;SPAN id=oStripsControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Motion: &lt;SELECT onchange=stripsTransChange() name=movementList&gt; 
&lt;OPTION value=leftup&gt;Left-up&lt;/OPTION&gt; 
&lt;OPTION value=leftdown SELECTED&gt;Left-down&lt;/OPTION&gt; 
&lt;OPTION value=rightup&gt;Right-up&lt;/OPTION&gt; 
&lt;OPTION value=rightdown&gt;Right-down&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Wheel  --&gt;
&lt;SPAN id=oWheelControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
Spokes: 
&lt;SELECT onchange=wheelTransChange() name=spokesList&gt; 
&lt;OPTION value=2&gt;2&lt;/OPTION&gt; 
&lt;OPTION value=4 SELECTED&gt;4&lt;/OPTION&gt; 
&lt;OPTION value=6&gt;6&lt;/OPTION&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=10&gt;10&lt;/OPTION&gt;
&lt;/SELECT&gt; 
&lt;/SPAN&gt;

&lt;!--Wipe --&gt;
&lt;SPAN id=oWipeControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
GradientSize: &lt;SELECT onchange=wipeTransChange() name=gradientSizeList&gt; 
&lt;OPTION value=0.00&gt;0.00&lt;/OPTION&gt; 
&lt;OPTION value=0.25 SELECTED&gt;0.25&lt;/OPTION&gt; 
&lt;OPTION value=0.50&gt;0.50&lt;/OPTION&gt; 
&lt;OPTION value=0.75&gt;0.75&lt;/OPTION&gt; 
&lt;OPTION value=1.00&gt;1.00&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR&gt;&lt;BR&gt;
WipeStyle: &lt;SELECT onchange=wipeTransChange() name=wipeStyleList&gt; 
&lt;OPTION value=0 SELECTED&gt;0 - Left-to-right motion&lt;/OPTION&gt; 
&lt;OPTION value=1&gt;1 - Top-to-bottom motion&lt;/OPTION&gt;
&lt;/SELECT&gt;&lt;BR&gt;&lt;BR&gt;
Motion: &lt;SELECT onchange=wipeTransChange() name=wipeReverseSwitch&gt; 
&lt;OPTION  value=forward SELECTED&gt;Forward&lt;/OPTION&gt; 
&lt;OPTION  value=reverse&gt;Reverse&lt;/OPTION&gt;
&lt;/SELECT&gt;
&lt;/SPAN&gt;

&lt;!--ZigZag  --&gt;
&lt;SPAN id=oZigzagControls style=&quot;DISPLAY: none&quot; isSource=&quot;TRUE&quot;&gt;&lt;BR/&gt;
GridSizeX: 
&lt;SELECT onchange=zigzagTransChange() name=zigzagGridSizeXList&gt; 
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=16 SELECTED&gt;16&lt;/OPTION&gt; 
&lt;OPTION value=32&gt;32&lt;/OPTION&gt; 
&lt;OPTION value=64&gt;64&lt;/OPTION&gt;
&lt;OPTION value=100&gt;100&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
GridSizeY: &lt;SELECT onchange=zigzagTransChange() name=zigzagGridSizeYList&gt;
&lt;OPTION value=8&gt;8&lt;/OPTION&gt; 
&lt;OPTION value=16 SELECTED&gt;16&lt;/OPTION&gt; 
&lt;OPTION value=32&gt;32&lt;/OPTION&gt; 
&lt;OPTION value=64&gt;64&lt;/OPTION&gt;
&lt;OPTION value=100&gt;100&lt;/OPTION&gt; 
&lt;/SELECT&gt; 
&lt;/SPAN&gt;





&nbsp;

</textarea>
              </td>
            </tr>
          </table>
        </div>
      </td>
    </tr>
  </table>
  <hr width="770">
   <table width="770" border="0" cellspacing="0" cellpadding="0" height="21">
    <tr>
      <td bgcolor="#CCCCCC" valign="middle">
        <div align="center"><script language=javascript src=buttom.js></script></div>
      </td>
    </tr>
    <tr>
      <td>
        <div align="center"></div>
      </td>
    </tr>
  </table>
</div>
</body>
</html>
